{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A RESTful API to interface with Uservoice's feedback system. Online documentation available [here](https://developer.uservoice.com/docs/api/v2/reference/).\n\n# Authentication\n\n\u003c!-- ReDoc-Inject: \u003csecurity-definitions\u003e --\u003e\n\n# Responses\n\nInformation about the possible responses for each endpoint is provided below. The responses should be interpreted as follows.\n\n## 200\n\nEverything is great, probably.\n\n## 429\n\nToo fast, slow down!\n",
        "title": "Uservoice API",
        "version": "0.1.0"
    },
    "host": "\u003csubdomain\u003e.uservoice.com",
    "basePath": "/api/v2",
    "paths": {
        "/admin/attachments": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attachments"
                ],
                "summary": "List Attachments",
                "operationId": "ListAttachments",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "suggestions",
                                "comments",
                                "supporter_messages",
                                "status_updates",
                                "internal_status_updates",
                                "roadmap_items"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "\nThe `tickets` value is only usuable on accounts with our legacy Helpdesk features, and will return a response for ideas that have been converted to tickets.",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id"
                        ],
                        "type": "string",
                        "default": "-id",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "supporter_message",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "comment",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "status_update",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "internal_status_update",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "feature",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "attachments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Attachment"
                                    }
                                },
                                "comments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Comment"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "internal_status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalStatusUpdate"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/attachments \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=suggestions \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d sort=-id \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d suggestion=1,2,3 \\\n\t-d supporter_message=1,2,3 \\\n\t-d comment=1,2,3 \\\n\t-d status_update=1,2,3 \\\n\t-d internal_status_update=1,2,3 \\\n\t-d feature=1,2,3"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attachments"
                ],
                "summary": "Create Attachments",
                "operationId": "CreateAttachments",
                "parameters": [
                    {
                        "type": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "attachments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Attachment"
                                    }
                                },
                                "comments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Comment"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "internal_status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalStatusUpdate"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/attachments \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-F file=@/path/to/file.jpg"
                    }
                ]
            }
        },
        "/admin/attachments/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attachments"
                ],
                "summary": "Find Attachments",
                "operationId": "FindAttachments",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "suggestions",
                                "comments",
                                "supporter_messages",
                                "status_updates",
                                "internal_status_updates",
                                "roadmap_items"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "attachments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Attachment"
                                    }
                                },
                                "comments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Comment"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "internal_status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalStatusUpdate"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/attachments/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=suggestions"
                    }
                ]
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attachments"
                ],
                "summary": "Delete Attachments",
                "operationId": "DeleteAttachments",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiDeleteResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/attachments/1 \\\n\t-X DELETE \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/categories": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "List Categories",
                "operationId": "ListCategories",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "forums"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "name",
                            "-name",
                            "updated_at",
                            "-updated_at"
                        ],
                        "type": "string",
                        "default": "-id",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "forum",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/categories \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=forums \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=-id \\\n\t-d forum=1,2,3"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Create Categories",
                "operationId": "CreateCategories",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateCategoriesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/categories \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d links.forum=1 \\\n\t-d name=foo"
                    }
                ]
            }
        },
        "/admin/categories/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Find Categories",
                "operationId": "FindCategories",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "forums"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/categories/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=forums"
                    }
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Update Categories",
                "operationId": "UpdateCategories",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateCategoriesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/categories/1 \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d name=foo"
                    }
                ]
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Delete Categories",
                "operationId": "DeleteCategories",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiDeleteResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/categories/1 \\\n\t-X DELETE \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/comments": {
            "get": {
                "description": "\n_List_ the comments.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "List Comments",
                "operationId": "ListComments",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "suggestions",
                                "users",
                                "fullstory_user_sessions"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "\nWhether to include *suggestions* or *users*.\n",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "updated_at",
                            "-updated_at"
                        ],
                        "type": "string",
                        "default": "-id",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "published",
                            "approved",
                            "filtered",
                            "new",
                            "for_review",
                            "deleted",
                            "spam"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "x-example": "published, deleted",
                        "description": "\n* - `new`: recently created\n* - `filtered`: held for moderation\n* - `for_review`: flagged for review\n* - `published`: made from web portal and didn't go to moderation\n* - `approved`: approved by an admin, or made by an admin in the admin console\n* - `deleted`: deleted by admin user\n* - `spam`: marked as spam\n",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "comments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Comment"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Shell",
                        "source": "\ncurl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/comments \\\n\t-X \"GET\" \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=suggestions \\\n\t-d sort=-id \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d state=published"
                    }
                ]
            },
            "post": {
                "description": "\nCreate a new comment.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Create Comments",
                "operationId": "CreateComments",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateCommentsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "comments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Comment"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Shell",
                        "source": "\ncurl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/comments \\\n\t-X \"POST\" \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d body=foo \\\n\t-d body_mime_type=text/plain \\\n\t-d channel=api \\\n\t-d attachment_tokens=foo,bar,test \\\n\t-d links.suggestion=1\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "\nputs 'foo'\nputs 'bar'"
                    }
                ]
            }
        },
        "/admin/comments/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Find Comments",
                "operationId": "FindComments",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "suggestions",
                                "users",
                                "fullstory_user_sessions"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "comments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Comment"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/comments/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=suggestions"
                    }
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Update Comments",
                "operationId": "UpdateComments",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateCommentsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "comments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Comment"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/comments/1 \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d body=foo"
                    }
                ]
            }
        },
        "/admin/comments/{id}/approve": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Approve Comments",
                "operationId": "ApproveComments",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "comments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Comment"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/comments/1/approve \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/comments/{id}/delete": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Delete Comments",
                "operationId": "DeleteComments",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "comments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Comment"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/comments/1/delete \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/comments/{id}/restore": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Restore Comments",
                "operationId": "RestoreComments",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "comments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Comment"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/comments/1/restore \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/comments/{id}/spam": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Mark a comment as spam",
                "operationId": "SpamComments",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "comments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Comment"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/comments/1/spam \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/custom_fields": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "custom_fields"
                ],
                "summary": "List Custom Fields",
                "operationId": "ListCustomFields",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "name",
                            "-name",
                            "key",
                            "-key",
                            "field_type",
                            "-field_type",
                            "updated_at",
                            "-updated_at"
                        ],
                        "type": "string",
                        "default": "-id",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "external_users",
                            "external_accounts",
                            "features",
                            "suggestions"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "object_type",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "API key for the custom field /^cf_[0-9A-Za-z_]+/",
                        "name": "key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "custom_fields": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CustomField"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/custom_fields \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=-id \\\n\t-d object_type=foo,bar,baz \\\n\t-d key=foo,bar,baz"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "custom_fields"
                ],
                "summary": "Create Custom Fields",
                "operationId": "CreateCustomFields",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateCustomFieldsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "custom_fields": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CustomField"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/custom_fields \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d field_type=boolean \\\n\t-d key=pattern \\\n\t-d name=foo \\\n\t-d object_type=external_users \\\n\t-d value_type=numeric_enum"
                    }
                ]
            }
        },
        "/admin/custom_fields/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "custom_fields"
                ],
                "summary": "Find Custom Fields",
                "operationId": "FindCustomFields",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "custom_fields": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CustomField"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/custom_fields/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users"
                    }
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "custom_fields"
                ],
                "summary": "Update Custom Fields",
                "operationId": "UpdateCustomFields",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateCustomFieldsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "custom_fields": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CustomField"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/custom_fields/1 \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d key=pattern \\\n\t-d name=foo"
                    }
                ]
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "custom_fields"
                ],
                "summary": "Delete Custom Fields",
                "operationId": "DeleteCustomFields",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiDeleteResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/custom_fields/1 \\\n\t-X DELETE \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/external_accounts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external_accounts"
                ],
                "summary": "List External Accounts",
                "operationId": "ListExternalAccounts",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "\nPagination token, used to paginate through results.",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "external_id",
                            "-external_id",
                            "name",
                            "-name",
                            "created_at",
                            "-created_at",
                            "mrr_cents",
                            "-mrr_cents",
                            "ltv_cents",
                            "-ltv_cents",
                            "revenue",
                            "-revenue",
                            "last_active_at",
                            "-last_active_at",
                            "external_created_at",
                            "-external_created_at",
                            "has_internal_flag",
                            "-has_internal_flag",
                            "updated_at",
                            "-updated_at",
                            "importance",
                            "-importance"
                        ],
                        "type": "string",
                        "default": "-last_active_at",
                        "description": "Specify custom field sorting by object and key, e.g. 'external_accounts.cf_industry'. Text custom fields cannot be sorted.",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "external_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "feature",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "supported",
                            "engaged"
                        ],
                        "type": "string",
                        "default": "supported",
                        "name": "association",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string to search",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "external_accounts": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalAccount"
                                    }
                                },
                                "gs_companies": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GsCompany"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/external_accounts \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=-last_active_at \\\n\t-d external_id=foo,bar,baz \\\n\t-d suggestion=1,2,3 \\\n\t-d feature=1,2,3 \\\n\t-d id=1,2,3 \\\n\t-d association=supported \\\n\t-d q=foo"
                    }
                ]
            }
        },
        "/admin/external_accounts/batch": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external_accounts"
                ],
                "summary": "Batch import external accounts",
                "operationId": "BatchExternalAccounts",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchExternalAccountsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "external_accounts": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalAccount"
                                    }
                                },
                                "gs_companies": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GsCompany"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/external_accounts/batch \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/external_accounts/bulk_delete": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external_accounts"
                ],
                "summary": "Bulk delete external accounts by ID",
                "operationId": "BulkDeleteExternalAccounts",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BulkDeleteExternalAccountsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MapResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "status": "success"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Shell",
                        "source": "\ncurl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/external_accounts/bulk_delete \\\n\t-X \"DELETE\" \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-H \"Content-type: application/json\" \\\n\t-d '{\"ids\":[1,2,3]}'"
                    }
                ]
            }
        },
        "/admin/external_accounts/bulk_delete_by_external_id": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external_accounts"
                ],
                "summary": "Bulk delete external accounts by external ID",
                "operationId": "BulkDeleteByExternalIdExternalAccounts",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BulkDeleteByExternalIdExternalAccountsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MapResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "status": "success"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Shell",
                        "source": "\ncurl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/external_accounts/bulk_delete_by_external_id \\\n\t-X \"DELETE\" \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-H \"Content-type: application/json\" \\\n\t-d '{\"external_ids\":[1,2,3]}'"
                    }
                ]
            }
        },
        "/admin/external_accounts/import": {
            "post": {
                "description": "Import external account data.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external_accounts"
                ],
                "summary": "Import External Accounts",
                "operationId": "ImportExternalAccounts",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ImportExternalAccountsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "external_accounts": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalAccount"
                                    }
                                },
                                "gs_companies": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GsCompany"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/external_accounts/import \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/external_accounts/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external_accounts"
                ],
                "summary": "Find External Accounts",
                "operationId": "FindExternalAccounts",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "external_accounts": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalAccount"
                                    }
                                },
                                "gs_companies": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GsCompany"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/external_accounts/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G"
                    }
                ]
            }
        },
        "/admin/external_users": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external_users"
                ],
                "summary": "List External Users",
                "operationId": "ListExternalUsers",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "external_accounts",
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Pagination token, used to paginate through results.",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "updated_at",
                            "-updated_at"
                        ],
                        "type": "string",
                        "default": "-updated_at",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "When used with `user` this will return a result that matches both `user` and `external_id`.\n",
                        "name": "external_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "user",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "external_accounts": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalAccount"
                                    }
                                },
                                "external_users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalUser"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/external_users \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=external_accounts \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=-updated_at \\\n\t-d external_id=foo,bar,baz \\\n\t-d user=1,2,3"
                    }
                ]
            }
        },
        "/admin/external_users/batch": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external_users"
                ],
                "summary": "Batch import external users",
                "operationId": "BatchExternalUsers",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchExternalUsersBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "external_accounts": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalAccount"
                                    }
                                },
                                "external_users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalUser"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/external_users/batch \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/external_users/bulk_delete": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external_users"
                ],
                "summary": "Bulk delete external users by ID",
                "operationId": "BulkDeleteExternalUsers",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BulkDeleteExternalUsersBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MapResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "status": "success"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Shell",
                        "source": "\ncurl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/external_users/bulk_delete \\\n\t-X \"DELETE\" \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-H \"Content-type: application/json\" \\\n\t-d '{\"ids\":[1,2,3]}'"
                    }
                ]
            }
        },
        "/admin/external_users/bulk_delete_by_external_id": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external_users"
                ],
                "summary": "Bulk delete external users by external ID",
                "operationId": "BulkDeleteByExternalIdExternalUsers",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BulkDeleteByExternalIdExternalUsersBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MapResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "status": "success"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Shell",
                        "source": "\ncurl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/external_users/bulk_delete_by_external_id \\\n\t-X \"DELETE\" \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-H \"Content-type: application/json\" \\\n\t-d '{\"external_ids\":[1,2,3]}'"
                    }
                ]
            }
        },
        "/admin/external_users/import": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external_users"
                ],
                "summary": "Import external users",
                "operationId": "ImportExternalUsers",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ImportExternalUsersBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "external_accounts": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalAccount"
                                    }
                                },
                                "external_users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalUser"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "shell",
                        "source": "\ncurl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/external_users/import \\\n  -X \"POST\" \\\n  -H \"Authorization: Bearer \u003ctoken\u003e\" \\\n  -H \"Content-type: application/json\" \\\n  -d '{\n    \"users\": [\n      {\n        \"account\": {\n          \"external_created_at\": \"2020-02-06T17:02:05Z\",\n          \"external_id\": \"string\",\n          \"name\": \"string\",\n          \"plan\": \"string\",\n          \"revenue\": 0\n        },\n        \"email\": \"string\",\n        \"external_created_at\": \"2020-02-06T17:02:05Z\",\n        \"external_id\": \"string\",\n        \"ip\": \"string\",\n        \"name\": \"string\",\n        \"type\": \"string\",\n        user_id: 0\n      }\n    ]\n  }'"
                    },
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/external_users/import \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/external_users/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external_users"
                ],
                "summary": "Find External Users",
                "operationId": "FindExternalUsers",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "This is the internal ID of the External User object. This can be found by using the List endpoint, or in the response when you create an external user.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "external_accounts",
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "external_accounts": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalAccount"
                                    }
                                },
                                "external_users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalUser"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/external_users/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=external_accounts"
                    }
                ]
            }
        },
        "/admin/feature_statuses": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feature_statuses"
                ],
                "summary": "List Feature Statuses",
                "operationId": "ListFeatureStatuses",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "name",
                            "-name",
                            "created_at",
                            "-created_at",
                            "updated_at",
                            "-updated_at",
                            "position",
                            "-position"
                        ],
                        "type": "string",
                        "default": "position",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "feature_statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FeatureStatus"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/feature_statuses \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users \\\n\t-d sort=position \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z"
                    }
                ]
            }
        },
        "/admin/feature_statuses/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feature_statuses"
                ],
                "summary": "Find Feature Statuses",
                "operationId": "FindFeatureStatuses",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "feature_statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FeatureStatus"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/feature_statuses/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users"
                    }
                ]
            }
        },
        "/admin/features": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "features"
                ],
                "summary": "List Features",
                "operationId": "ListFeatures",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "suggestions",
                                "users",
                                "feature_statuses",
                                "product_areas",
                                "jira_issues",
                                "vsts_work_items",
                                "custom_fields"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "name",
                            "-name",
                            "supporting_users_count",
                            "-supporting_users_count",
                            "supporting_accounts_count",
                            "-supporting_accounts_count",
                            "supporter_mrr_cents",
                            "-supporter_mrr_cents",
                            "supporter_revenue",
                            "-supporter_revenue",
                            "suggestions_count",
                            "-suggestions_count",
                            "created_at",
                            "-created_at",
                            "updated_at",
                            "-updated_at",
                            "feature_status",
                            "-feature_status",
                            "product_area",
                            "-product_area",
                            "jira_status_last_updated_at",
                            "-jira_status_last_updated_at",
                            "jira_link_count",
                            "-jira_link_count",
                            "has_internal_flag",
                            "-has_internal_flag",
                            "vsts_link_count",
                            "-vsts_link_count",
                            "vsts_state_last_updated_at",
                            "-vsts_state_last_updated_at",
                            "position",
                            "-position"
                        ],
                        "type": "string",
                        "default": "-id",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "account",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "feature_status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "no_status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "product_area",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "no_product_area",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "feature_statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FeatureStatus"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "product_areas": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProductArea"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/features \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=suggestions \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=-id \\\n\t-d user=1,2,3 \\\n\t-d account=1,2,3 \\\n\t-d suggestion=1,2,3 \\\n\t-d feature_status=1,2,3 \\\n\t-d no_status=true \\\n\t-d product_area=1,2,3 \\\n\t-d no_product_area=true \\\n\t-d q=foo"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "features"
                ],
                "summary": "Create Features",
                "operationId": "CreateFeatures",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateFeaturesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "feature_statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FeatureStatus"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "product_areas": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProductArea"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/features \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d attachment_tokens=foo,bar,baz \\\n\t-d description=foo \\\n\t-d feature_status_id=1 \\\n\t-d name=foo \\\n\t-d product_area_id=1 \\\n\t-d roadmap_id=1"
                    }
                ]
            }
        },
        "/admin/features/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "features"
                ],
                "summary": "Find Features",
                "operationId": "FindFeatures",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "suggestions",
                                "users",
                                "feature_statuses",
                                "product_areas",
                                "jira_issues",
                                "vsts_work_items",
                                "custom_fields"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "feature_statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FeatureStatus"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "product_areas": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProductArea"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/features/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=suggestions"
                    }
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "features"
                ],
                "summary": "Update Features",
                "operationId": "UpdateFeatures",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateFeaturesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "feature_statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FeatureStatus"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "product_areas": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProductArea"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/features/1 \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d attachment_tokens=foo,bar,baz \\\n\t-d description=foo \\\n\t-d feature_status_id=1 \\\n\t-d name=foo \\\n\t-d position=1 \\\n\t-d product_area_id=1 \\\n\t-d roadmap_id=1"
                    }
                ]
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "features"
                ],
                "summary": "Delete Features",
                "operationId": "DeleteFeatures",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiDeleteResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/features/1 \\\n\t-X DELETE \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/feedback_records": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedback_records"
                ],
                "summary": "List Feedback Records",
                "operationId": "ListFeedbackRecords",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "supporters",
                                "suggestions",
                                "features",
                                "forums",
                                "categories",
                                "users",
                                "statuses",
                                "sfdc_opportunities",
                                "teams",
                                "external_users",
                                "external_accounts",
                                "internal_status_updates",
                                "status_updates",
                                "internal_statuses",
                                "reactions"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "updated_at",
                            "-updated_at",
                            "created_at",
                            "-created_at"
                        ],
                        "type": "string",
                        "default": "-created_at",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "users",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "name": "has_links",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "source_url",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "zendesk_ticket",
                            "zendesk_user",
                            "sfdc"
                        ],
                        "type": "string",
                        "name": "source_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "source_guid",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "team",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "no_team",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "external_account",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "feedback_records": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FeedbackRecord"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "reactions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Reaction"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporters": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Supporter"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/feedback_records \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=supporters \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=-created_at \\\n\t-d users=1,2,3 \\\n\t-d has_links=true \\\n\t-d source_url=foo \\\n\t-d source_type=zendesk_ticket \\\n\t-d source_guid=foo \\\n\t-d suggestion=1,2,3 \\\n\t-d q=foo \\\n\t-d team=1,2,3 \\\n\t-d no_team=true \\\n\t-d external_account=1,2,3"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedback_records"
                ],
                "summary": "Create Feedback Records",
                "operationId": "CreateFeedbackRecords",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateFeedbackRecordsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "feedback_records": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FeedbackRecord"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "reactions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Reaction"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporters": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Supporter"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/feedback_records \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d attachment_tokens=foo,bar,baz \\\n\t-d body=foo \\\n\t-d body_mime_type=text/plain \\\n\t-d channel=api \\\n\t-d created_at=2016-12-25T17:01:47.138Z \\\n\t-d creator.email=foo \\\n\t-d creator.id=1 \\\n\t-d creator.name=foo \\\n\t-d links.outreach=1 \\\n\t-d links.suggestion=1 \\\n\t-d links.support_created_at=2016-12-25T17:01:47.138Z \\\n\t-d links.ticket=1 \\\n\t-d links.user=1 \\\n\t-d links.user_email=foo \\\n\t-d nps_rating=1 \\\n\t-d prompt=foo \\\n\t-d referrer=foo \\\n\t-d severity=1 \\\n\t-d source_guid=foo \\\n\t-d source_type=zendesk_ticket \\\n\t-d source_url=foo \\\n\t-d subscribe=true"
                    }
                ]
            }
        },
        "/admin/feedback_records/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedback_records"
                ],
                "summary": "Find Feedback Records",
                "operationId": "FindFeedbackRecords",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "supporters",
                                "suggestions",
                                "features",
                                "forums",
                                "categories",
                                "users",
                                "statuses",
                                "sfdc_opportunities",
                                "teams",
                                "external_users",
                                "external_accounts",
                                "internal_status_updates",
                                "status_updates",
                                "internal_statuses",
                                "reactions"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "feedback_records": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FeedbackRecord"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "reactions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Reaction"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporters": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Supporter"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/feedback_records/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=supporters"
                    }
                ]
            },
            "put": {
                "description": "\nUpdates the feedback records\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedback_records"
                ],
                "summary": "Update Feedback Records",
                "operationId": "UpdateFeedbackRecords",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "x-example": "724049",
                        "description": "\nThe feedback record id\n",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateFeedbackRecordsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "feedback_records": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FeedbackRecord"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "reactions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Reaction"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporters": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Supporter"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/feedback_records/724049 \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d body=\"Our organization blocks gravatars so it would be very useful if we could upload our own avatar images directly.\" \\\n\t-d body_mime_type=text/html \\\n\t-d links.user=1 \\\n\t-d opportunity.amount=42170.99 \\\n\t-d opportunity.external_id=foo \\\n\t-d opportunity.external_url=foo \\\n\t-d opportunity.name=foo \\\n\t-d opportunity.stage_type=foo \\\n\t-d product_area_id=1 \\\n\t-d severity=1 \\\n\t-d source_guid=foo \\\n\t-d source_type=foo \\\n\t-d source_url=foo \\\n\t-d subscribe=true"
                    }
                ]
            }
        },
        "/admin/feedback_records/{id}/delete": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedback_records"
                ],
                "summary": "Delete Feedback Records",
                "operationId": "DeleteFeedbackRecords",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "feedback_records": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FeedbackRecord"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "reactions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Reaction"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporters": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Supporter"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/feedback_records/1/delete \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/feedback_records/{id}/link": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedback_records"
                ],
                "summary": "Link Feedback Records",
                "operationId": "LinkFeedbackRecords",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LinkFeedbackRecordsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "feedback_records": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FeedbackRecord"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "reactions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Reaction"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporters": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Supporter"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/feedback_records/1/link \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d suggestion=1"
                    }
                ]
            }
        },
        "/admin/feedback_records/{id}/undelete": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedback_records"
                ],
                "summary": "Undelete Feedback Records",
                "operationId": "UndeleteFeedbackRecords",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "feedback_records": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FeedbackRecord"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "reactions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Reaction"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporters": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Supporter"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/feedback_records/1/undelete \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/forum_invitations": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum_invitations"
                ],
                "summary": "List Forum Invitations",
                "operationId": "ListForumInvitations",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "forums",
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "created_at",
                            "-created_at",
                            "updated_at",
                            "-updated_at"
                        ],
                        "type": "string",
                        "default": "-id",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "forum",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "claimed",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "forum_invitations": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ForumInvitation"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/forum_invitations \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=forums \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=-id \\\n\t-d forum=1 \\\n\t-d claimed=true \\\n\t-d email=foo"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum_invitations"
                ],
                "summary": "Create Forum Invitations",
                "operationId": "CreateForumInvitations",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateForumInvitationsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "forum_invitations": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ForumInvitation"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/forum_invitations \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d email=foo,bar,baz \\\n\t-d links.forum=1 \\\n\t-d message=foo \\\n\t-d reply_to=foo \\\n\t-d subject=foo"
                    }
                ]
            }
        },
        "/admin/forum_invitations/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum_invitations"
                ],
                "summary": "Find Forum Invitations",
                "operationId": "FindForumInvitations",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "forums",
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "forum_invitations": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ForumInvitation"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/forum_invitations/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=forums"
                    }
                ]
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum_invitations"
                ],
                "summary": "Delete Forum Invitations",
                "operationId": "DeleteForumInvitations",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiDeleteResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/forum_invitations/1 \\\n\t-X DELETE \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/forums": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forums"
                ],
                "summary": "List Forums",
                "operationId": "ListForums",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "name",
                            "-name",
                            "updated_at",
                            "-updated_at"
                        ],
                        "type": "string",
                        "default": "-id",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "open",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/forums \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=-id \\\n\t-d open=true"
                    }
                ]
            }
        },
        "/admin/forums/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forums"
                ],
                "summary": "Find Forums",
                "operationId": "FindForums",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/forums/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users"
                    }
                ]
            }
        },
        "/admin/importance_responses": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "importance_responses"
                ],
                "summary": "List Importance Responses",
                "operationId": "ListImportanceResponses",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "value",
                            "-value"
                        ],
                        "type": "string",
                        "default": "-value",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "importance_responses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ImportanceResponse"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/importance_responses \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d sort=-value"
                    }
                ]
            }
        },
        "/admin/importance_responses/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "importance_responses"
                ],
                "summary": "Find Importance Responses",
                "operationId": "FindImportanceResponses",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "importance_responses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ImportanceResponse"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/importance_responses/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users"
                    }
                ]
            }
        },
        "/admin/internal_flags": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal_flags"
                ],
                "summary": "List Internal Flags",
                "operationId": "ListInternalFlags",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users",
                                "suggestions"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "created_at",
                            "-created_at",
                            "updated_at",
                            "-updated_at"
                        ],
                        "type": "string",
                        "default": "-id",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "team",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "team_none",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "internal_flags": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalFlag"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/internal_flags \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=-id \\\n\t-d suggestion=1,2,3 \\\n\t-d user=1,2,3 \\\n\t-d created_by=1,2,3 \\\n\t-d team=1,2,3 \\\n\t-d team_none=true"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal_flags"
                ],
                "summary": "Create Internal Flags",
                "operationId": "CreateInternalFlags",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateInternalFlagsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "internal_flags": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalFlag"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/internal_flags \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d reason=foo \\\n\t-d suggestion=1 \\\n\t-d user.email=foo \\\n\t-d user.id=1 \\\n\t-d user.name=foo"
                    }
                ]
            }
        },
        "/admin/internal_flags/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal_flags"
                ],
                "summary": "Find Internal Flags",
                "operationId": "FindInternalFlags",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users",
                                "suggestions"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "internal_flags": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalFlag"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/internal_flags/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users"
                    }
                ]
            }
        },
        "/admin/internal_flags/{id}/clear": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal_flags"
                ],
                "summary": "Clear Internal Flags",
                "operationId": "ClearInternalFlags",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClearInternalFlagsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "internal_flags": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalFlag"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/internal_flags/1/clear \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d cleared_message=foo"
                    }
                ]
            }
        },
        "/admin/internal_status_updates": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal_status_updates"
                ],
                "summary": "List Internal Status Updates",
                "operationId": "ListInternalStatusUpdates",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "suggestions",
                                "users",
                                "internal_statuses"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id"
                        ],
                        "type": "string",
                        "default": "id",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "internal_status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalStatusUpdate"
                                    }
                                },
                                "internal_statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalStatus"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/internal_status_updates \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=suggestions \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d suggestion=1,2,3 \\\n\t-d sort=id"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal_status_updates"
                ],
                "summary": "Create Internal Status Updates",
                "operationId": "CreateInternalStatusUpdates",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateInternalStatusUpdatesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "internal_status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalStatusUpdate"
                                    }
                                },
                                "internal_statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalStatus"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/internal_status_updates \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d attachment_tokens=foo,bar,baz \\\n\t-d html_text=foo \\\n\t-d links.internal_status=1 \\\n\t-d links.suggestion=1 \\\n\t-d notify_supporters=false \\\n\t-d text=foo"
                    }
                ]
            }
        },
        "/admin/internal_status_updates/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal_status_updates"
                ],
                "summary": "Find Internal Status Updates",
                "operationId": "FindInternalStatusUpdates",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "suggestions",
                                "users",
                                "internal_statuses"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "internal_status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalStatusUpdate"
                                    }
                                },
                                "internal_statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalStatus"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/internal_status_updates/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=suggestions"
                    }
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal_status_updates"
                ],
                "summary": "Update Internal Status Updates",
                "operationId": "UpdateInternalStatusUpdates",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateInternalStatusUpdatesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "internal_status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalStatusUpdate"
                                    }
                                },
                                "internal_statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalStatus"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/internal_status_updates/1 \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d html_text=foo \\\n\t-d text=foo"
                    }
                ]
            }
        },
        "/admin/internal_statuses": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal_statuses"
                ],
                "summary": "List Internal Statuses",
                "operationId": "ListInternalStatuses",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "position",
                            "-position",
                            "updated_at",
                            "-updated_at"
                        ],
                        "type": "string",
                        "default": "position",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "internal_statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalStatus"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/internal_statuses \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=position"
                    }
                ]
            }
        },
        "/admin/internal_statuses/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal_statuses"
                ],
                "summary": "Find Internal Statuses",
                "operationId": "FindInternalStatuses",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "internal_statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalStatus"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/internal_statuses/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G"
                    }
                ]
            }
        },
        "/admin/labels": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "labels"
                ],
                "summary": "List Labels",
                "operationId": "ListLabels",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "forums",
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "updated_at",
                            "-updated_at"
                        ],
                        "type": "string",
                        "default": "-id",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/labels \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=forums \\\n\t-d sort=-id \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "labels"
                ],
                "summary": "Create Labels",
                "operationId": "CreateLabels",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateLabelsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/labels \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d links.parent=1 \\\n\t-d name=foo"
                    }
                ]
            }
        },
        "/admin/labels/attach": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "labels"
                ],
                "summary": "Attach Labels",
                "operationId": "AttachLabels",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AttachLabelsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/labels/attach \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d links.label=1 \\\n\t-d links.suggestion=1"
                    }
                ]
            }
        },
        "/admin/labels/detach": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "labels"
                ],
                "summary": "Detach Labels",
                "operationId": "DetachLabels",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DetachLabelsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/labels/detach \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d links.label=1 \\\n\t-d links.suggestion=1"
                    }
                ]
            }
        },
        "/admin/labels/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "labels"
                ],
                "summary": "Find Labels",
                "operationId": "FindLabels",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "forums",
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/labels/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=forums"
                    }
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "labels"
                ],
                "summary": "Update Labels",
                "operationId": "UpdateLabels",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateLabelsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/labels/1 \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d links.parent=1 \\\n\t-d name=foo"
                    }
                ]
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "labels"
                ],
                "summary": "Delete Labels",
                "operationId": "DeleteLabels",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiDeleteResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/labels/1 \\\n\t-X DELETE \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/notes": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "List Notes",
                "operationId": "ListNotes",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "suggestions",
                                "forums",
                                "users",
                                "mentions"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id"
                        ],
                        "type": "string",
                        "default": "-id",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "suggestion",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "notes": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Note"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/notes \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=suggestions \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d sort=-id \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d suggestion=1"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Create Notes",
                "operationId": "CreateNotes",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateNotesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "notes": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Note"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/notes \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d attachment_tokens=foo,bar,baz \\\n\t-d body=foo \\\n\t-d body_mime_type=text/plain \\\n\t-d links.suggestion=1"
                    }
                ]
            }
        },
        "/admin/notes/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Find Notes",
                "operationId": "FindNotes",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "suggestions",
                                "forums",
                                "users",
                                "mentions"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "notes": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Note"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/notes/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=suggestions"
                    }
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Update Notes",
                "operationId": "UpdateNotes",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateNotesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "notes": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Note"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/notes/1 \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d attachment_tokens=foo,bar,baz \\\n\t-d body=foo"
                    }
                ]
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Delete Notes",
                "operationId": "DeleteNotes",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiDeleteResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/notes/1 \\\n\t-X DELETE \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/nps_ratings": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nps_ratings"
                ],
                "summary": "List Nps Ratings",
                "operationId": "ListNpsRatings",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id"
                        ],
                        "type": "string",
                        "default": "-id",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "period_start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "period_end",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "forum",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "nps_ratings": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NPSRating"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/nps_ratings \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d sort=-id \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d period_start=2016-12-25T17:01:47.138Z \\\n\t-d period_end=2016-12-25T17:01:47.138Z \\\n\t-d user=1,2,3 \\\n\t-d forum=1,2,3"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nps_ratings"
                ],
                "summary": "Create Nps Ratings",
                "operationId": "CreateNpsRatings",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateNpsRatingsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "nps_ratings": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NPSRating"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/nps_ratings \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d body=foo \\\n\t-d date=2016-12-25T17:01:47.138Z \\\n\t-d forum=1 \\\n\t-d prompt=foo \\\n\t-d rating=1 \\\n\t-d user.email=foo \\\n\t-d user.id=1 \\\n\t-d user.name=foo"
                    }
                ]
            }
        },
        "/admin/nps_ratings/bulk_delete": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nps_ratings"
                ],
                "summary": "Bulk delete nps ratings by ID",
                "operationId": "BulkDeleteNpsRatings",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BulkDeleteNpsRatingsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MapResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "status": "success"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/nps_ratings/bulk_delete \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d ids=1,2,3"
                    }
                ]
            }
        },
        "/admin/nps_ratings/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nps_ratings"
                ],
                "summary": "Find Nps Ratings",
                "operationId": "FindNpsRatings",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "nps_ratings": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NPSRating"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/nps_ratings/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users"
                    }
                ]
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nps_ratings"
                ],
                "summary": "Delete Nps Ratings",
                "operationId": "DeleteNpsRatings",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiDeleteResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/nps_ratings/1 \\\n\t-X DELETE \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/permissions": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "List Permissions",
                "operationId": "ListPermissions",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users",
                                "teams"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "created_at",
                            "-created_at",
                            "updated_at",
                            "-updated_at"
                        ],
                        "type": "string",
                        "default": "-id",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "license_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "permissions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Permission"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/permissions \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=-id \\\n\t-d user=1,2,3 \\\n\t-d license_type=foo,bar,baz"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Create Permissions",
                "operationId": "CreatePermissions",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatePermissionsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "permissions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Permission"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/permissions \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d email=foo,bar,baz \\\n\t-d features=none \\\n\t-d feedback=contribute \\\n\t-d knowledgebase=none \\\n\t-d license_type=fullaccess_admin \\\n\t-d reply_to=foo \\\n\t-d settings=none \\\n\t-d tickets=none"
                    }
                ]
            }
        },
        "/admin/permissions/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Find Permissions",
                "operationId": "FindPermissions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users",
                                "teams"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "permissions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Permission"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/permissions/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users"
                    }
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Update Permissions",
                "operationId": "UpdatePermissions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdatePermissionsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "permissions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Permission"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/permissions/1 \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d features=none \\\n\t-d feedback=contribute \\\n\t-d knowledgebase=none \\\n\t-d license_type=fullaccess_admin \\\n\t-d settings=none \\\n\t-d tickets=none"
                    }
                ]
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Delete Permissions",
                "operationId": "DeletePermissions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiDeleteResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/permissions/1 \\\n\t-X DELETE \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/permissions/{id}/resend": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Resend Permissions",
                "operationId": "ResendPermissions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "permissions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Permission"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/permissions/1/resend \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/product_areas": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product_areas"
                ],
                "summary": "List Product Areas",
                "operationId": "ListProductAreas",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "name",
                            "-name",
                            "created_at",
                            "-created_at",
                            "updated_at",
                            "-updated_at"
                        ],
                        "type": "string",
                        "default": "id",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "product_areas": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProductArea"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/product_areas \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=id"
                    }
                ]
            }
        },
        "/admin/product_areas/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product_areas"
                ],
                "summary": "Find Product Areas",
                "operationId": "FindProductAreas",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "product_areas": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProductArea"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/product_areas/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G"
                    }
                ]
            }
        },
        "/admin/segmented_values": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segmented_values"
                ],
                "summary": "List Segmented Values",
                "operationId": "ListSegmentedValues",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users",
                                "segments"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "key",
                            "-key",
                            "name",
                            "-name"
                        ],
                        "type": "string",
                        "default": "-id",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "segment",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "features",
                            "suggestions"
                        ],
                        "type": "string",
                        "name": "object_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "segmented_values": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SegmentedValue"
                                    }
                                },
                                "segments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Segment"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/segmented_values \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=-id \\\n\t-d segment=1,2,3 \\\n\t-d object_type=features \\\n\t-d key=foo"
                    }
                ]
            }
        },
        "/admin/segmented_values/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segmented_values"
                ],
                "summary": "Find Segmented Values",
                "operationId": "FindSegmentedValues",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users",
                                "segments"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "segmented_values": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SegmentedValue"
                                    }
                                },
                                "segments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Segment"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/segmented_values/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users"
                    }
                ]
            }
        },
        "/admin/segments": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segments"
                ],
                "summary": "List Segments",
                "operationId": "ListSegments",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "name",
                            "-name",
                            "created_at",
                            "-created_at",
                            "updated_at",
                            "-updated_at",
                            "key",
                            "-key"
                        ],
                        "type": "string",
                        "default": "id",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "custom_field",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "created_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "segments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Segment"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/segments \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=id \\\n\t-d custom_field=1,2,3 \\\n\t-d created_by=1"
                    }
                ]
            }
        },
        "/admin/segments/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segments"
                ],
                "summary": "Find Segments",
                "operationId": "FindSegments",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "segments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Segment"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/segments/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users"
                    }
                ]
            }
        },
        "/admin/status_updates": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status_updates"
                ],
                "summary": "List Status Updates",
                "operationId": "ListStatusUpdates",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users",
                                "suggestions",
                                "statuses"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id"
                        ],
                        "type": "string",
                        "default": "-id",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/status_updates \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d sort=-id \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d suggestion=1,2,3"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status_updates"
                ],
                "summary": "Create Status Updates",
                "operationId": "CreateStatusUpdates",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateStatusUpdatesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/status_updates \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d attachment_tokens=foo,bar,baz \\\n\t-d body=foo \\\n\t-d created_at=2016-12-25T17:01:47.138Z \\\n\t-d created_by_email=foo \\\n\t-d from_email=foo \\\n\t-d html_body=foo \\\n\t-d links.status=1 \\\n\t-d links.suggestion=1 \\\n\t-d notification_email_address=foo \\\n\t-d notify_supporters=false"
                    }
                ]
            }
        },
        "/admin/status_updates/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status_updates"
                ],
                "summary": "Find Status Updates",
                "operationId": "FindStatusUpdates",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users",
                                "suggestions",
                                "statuses"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/status_updates/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users"
                    }
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status_updates"
                ],
                "summary": "Update Status Updates",
                "operationId": "UpdateStatusUpdates",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateStatusUpdatesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/status_updates/1 \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d body=foo \\\n\t-d html_body=foo"
                    }
                ]
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status_updates"
                ],
                "summary": "Delete Status Updates",
                "operationId": "DeleteStatusUpdates",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiDeleteResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/status_updates/1 \\\n\t-X DELETE \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/statuses": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statuses"
                ],
                "summary": "List Statuses",
                "operationId": "ListStatuses",
                "parameters": [
                    {
                        "enum": [
                            "id",
                            "-id",
                            "name",
                            "-name",
                            "created_at",
                            "-created_at",
                            "updated_at",
                            "-updated_at",
                            "position",
                            "-position"
                        ],
                        "type": "string",
                        "default": "position",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/statuses \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d sort=position \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z"
                    }
                ]
            }
        },
        "/admin/statuses/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statuses"
                ],
                "summary": "Find Statuses",
                "operationId": "FindStatuses",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/statuses/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G"
                    }
                ]
            }
        },
        "/admin/subdomains/current": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subdomains"
                ],
                "summary": "Current Subdomains",
                "operationId": "CurrentSubdomains",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "subdomains": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Subdomain"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/subdomains/current \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/subdomains/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subdomains"
                ],
                "summary": "Update Subdomains",
                "operationId": "UpdateSubdomains",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateSubdomainsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "subdomains": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Subdomain"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/subdomains/1 \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d require_suggestion_on_capture_feedback=required \\\n\t-d severity_tracking_enabled=true"
                    }
                ]
            }
        },
        "/admin/suggested_merges": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggested_merges"
                ],
                "summary": "List Suggested Merges",
                "operationId": "ListSuggestedMerges",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "suggestions",
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "suggestion_params.page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "suggestion_params.per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "suggestion_params.cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "suggestion_params.updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "suggestion_params.updated_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "suggestion_params.period_start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "suggestion_params.period_end",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "created_at",
                            "-created_at",
                            "updated_at",
                            "-updated_at",
                            "title",
                            "-title",
                            "supporters_count",
                            "-supporters_count",
                            "votes_count",
                            "-votes_count",
                            "supporter_mrr",
                            "-supporter_mrr",
                            "supporter_revenue",
                            "-supporter_revenue",
                            "satisfaction_detractor_count",
                            "-satisfaction_detractor_count",
                            "notes_count",
                            "-notes_count",
                            "status_updated_at",
                            "-status_updated_at",
                            "comments_count",
                            "-comments_count",
                            "satisfaction_score",
                            "-satisfaction_score",
                            "supporting_accounts_count",
                            "-supporting_accounts_count",
                            "first_support_at",
                            "-first_support_at",
                            "last_support_at",
                            "-last_support_at",
                            "account_supporters_count",
                            "-account_supporters_count",
                            "jira_status_last_updated_at",
                            "-jira_status_last_updated_at",
                            "jira_link_count",
                            "-jira_link_count",
                            "has_internal_flag",
                            "-has_internal_flag",
                            "vsts_link_count",
                            "-vsts_link_count",
                            "vsts_state_last_updated_at",
                            "-vsts_state_last_updated_at",
                            "hotness",
                            "-hotness",
                            "public_status",
                            "-public_status",
                            "internal_status",
                            "-internal_status",
                            "internal_status_updated_at",
                            "-internal_status_updated_at",
                            "all_internal_flags_count",
                            "-all_internal_flags_count",
                            "internal_flags_count",
                            "-internal_flags_count",
                            "last_internal_flag_at",
                            "-last_internal_flag_at",
                            "activity",
                            "-activity",
                            "search_order",
                            "-search_order",
                            "importance_low",
                            "-importance_low",
                            "importance",
                            "-importance",
                            "importance_medium",
                            "-importance_medium",
                            "importance_high",
                            "-importance_high"
                        ],
                        "type": "string",
                        "name": "suggestion_params.sort",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion_params.forum",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion_params.creator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion_params.uncategorized_in_forum",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "suggestion_params.category_none",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion_params.category",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "suggestion_params.status_none",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion_params.status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "suggestion_params.internal_status_none",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion_params.internal_status",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "published",
                            "approved",
                            "closed",
                            "for_review",
                            "deleted",
                            "merged",
                            "spam",
                            "new",
                            "filtered",
                            "for_moderation",
                            "open",
                            "active",
                            "inactive",
                            "-published",
                            "-approved",
                            "-closed",
                            "-for_review",
                            "-deleted",
                            "-merged",
                            "-spam",
                            "-new",
                            "-filtered"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion_params.state",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion_params.label",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "suggestion_params.label_none",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion_params.supporter",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion_params.external_account",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion_params.feature",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "suggestion_params.has_response",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "suggestion_params.no_engagement_since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "suggestion_params.no_support_since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "suggestion_params.engagement_since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "suggestion_params.created_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "suggestion_params.created_before",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "suggestion_params.has_internal_flag",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion_params.flagged_by_team",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "suggestion_params.flagged_by_team_none",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "created",
                            "votes",
                            "comments",
                            "importance"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion_params.activity",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "suggestion_params.status_updated_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "suggestion_params.status_updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "suggestion_params.internal_status_updated_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "suggestion_params.internal_status_updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "suggestion_params.q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "suggestion_params.*",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "activity_params.page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "activity_params.per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "activity_params.cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "activity_params.period_start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "activity_params.period_end",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "created_at",
                            "-created_at",
                            "updated_at",
                            "-updated_at",
                            "title",
                            "-title",
                            "supporters_count",
                            "-supporters_count",
                            "votes_count",
                            "-votes_count",
                            "supporter_mrr",
                            "-supporter_mrr",
                            "supporter_revenue",
                            "-supporter_revenue",
                            "satisfaction_detractor_count",
                            "-satisfaction_detractor_count",
                            "notes_count",
                            "-notes_count",
                            "status_updated_at",
                            "-status_updated_at",
                            "comments_count",
                            "-comments_count",
                            "satisfaction_score",
                            "-satisfaction_score",
                            "supporting_accounts_count",
                            "-supporting_accounts_count",
                            "first_support_at",
                            "-first_support_at",
                            "last_support_at",
                            "-last_support_at",
                            "account_supporters_count",
                            "-account_supporters_count",
                            "jira_status_last_updated_at",
                            "-jira_status_last_updated_at",
                            "jira_link_count",
                            "-jira_link_count",
                            "has_internal_flag",
                            "-has_internal_flag",
                            "vsts_link_count",
                            "-vsts_link_count",
                            "vsts_state_last_updated_at",
                            "-vsts_state_last_updated_at",
                            "hotness",
                            "-hotness",
                            "public_status",
                            "-public_status",
                            "internal_status",
                            "-internal_status",
                            "internal_status_updated_at",
                            "-internal_status_updated_at",
                            "all_internal_flags_count",
                            "-all_internal_flags_count",
                            "internal_flags_count",
                            "-internal_flags_count",
                            "last_internal_flag_at",
                            "-last_internal_flag_at",
                            "activity",
                            "-activity",
                            "search_order",
                            "-search_order",
                            "importance_low",
                            "-importance_low",
                            "importance",
                            "-importance",
                            "importance_medium",
                            "-importance_medium",
                            "importance_high",
                            "-importance_high"
                        ],
                        "type": "string",
                        "name": "activity_params.sort",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_params.feature",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_params.user",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_params.suggestion",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_params.kind",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "published",
                            "approved",
                            "closed",
                            "for_review",
                            "deleted",
                            "merged",
                            "spam",
                            "new",
                            "filtered",
                            "for_moderation",
                            "open",
                            "active",
                            "inactive",
                            "-published",
                            "-approved",
                            "-closed",
                            "-for_review",
                            "-deleted",
                            "-merged",
                            "-spam",
                            "-new",
                            "-filtered"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_params.state",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "activity_params.spam",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "activity_params.needs_review",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_params.external_account",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "activity_params.updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "activity_params.updated_after",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_params.forum",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_params.creator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_params.uncategorized_in_forum",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "activity_params.category_none",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_params.category",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "activity_params.status_none",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_params.status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "activity_params.internal_status_none",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_params.internal_status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_params.label",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "activity_params.label_none",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_params.supporter",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "activity_params.has_response",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "activity_params.no_engagement_since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "activity_params.no_support_since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "activity_params.engagement_since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "activity_params.created_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "activity_params.created_before",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "activity_params.has_internal_flag",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_params.flagged_by_team",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "activity_params.flagged_by_team_none",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "created",
                            "votes",
                            "comments",
                            "importance"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "activity_params.activity",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "activity_params.status_updated_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "activity_params.status_updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "activity_params.internal_status_updated_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "activity_params.internal_status_updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "activity_params.q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "activity_params.*",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggested_merges": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SuggestedMerge"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggested_merges \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=suggestions \\\n\t-d suggestion=1,2,3 \\\n\t-d suggestion_params.page=1 \\\n\t-d suggestion_params.per_page=20 \\\n\t-d suggestion_params.cursor=foo \\\n\t-d suggestion_params.updated_before=2016-12-25T17:01:47.138Z \\\n\t-d suggestion_params.updated_after=2016-12-25T17:01:47.138Z \\\n\t-d suggestion_params.period_start=2016-12-25T17:01:47.138Z \\\n\t-d suggestion_params.period_end=2016-12-25T17:01:47.138Z \\\n\t-d suggestion_params.sort=id \\\n\t-d suggestion_params.forum=1,2,3 \\\n\t-d suggestion_params.creator=1,2,3 \\\n\t-d suggestion_params.uncategorized_in_forum=1,2,3 \\\n\t-d suggestion_params.category_none=true \\\n\t-d suggestion_params.category=1,2,3 \\\n\t-d suggestion_params.status_none=true \\\n\t-d suggestion_params.status=1,2,3 \\\n\t-d suggestion_params.internal_status_none=true \\\n\t-d suggestion_params.internal_status=1,2,3 \\\n\t-d suggestion_params.state=foo,bar,baz \\\n\t-d suggestion_params.label=1,2,3 \\\n\t-d suggestion_params.label_none=true \\\n\t-d suggestion_params.supporter=1,2,3 \\\n\t-d suggestion_params.external_account=1,2,3 \\\n\t-d suggestion_params.feature=1,2,3 \\\n\t-d suggestion_params.has_response=true \\\n\t-d suggestion_params.no_engagement_since=2016-12-25T17:01:47.138Z \\\n\t-d suggestion_params.no_support_since=2016-12-25T17:01:47.138Z \\\n\t-d suggestion_params.engagement_since=2016-12-25T17:01:47.138Z \\\n\t-d suggestion_params.created_after=2016-12-25T17:01:47.138Z \\\n\t-d suggestion_params.created_before=2016-12-25T17:01:47.138Z \\\n\t-d suggestion_params.has_internal_flag=true \\\n\t-d suggestion_params.flagged_by_team=1,2,3 \\\n\t-d suggestion_params.flagged_by_team_none=true \\\n\t-d suggestion_params.activity=foo,bar,baz \\\n\t-d suggestion_params.status_updated_after=2016-12-25T17:01:47.138Z \\\n\t-d suggestion_params.status_updated_before=2016-12-25T17:01:47.138Z \\\n\t-d suggestion_params.internal_status_updated_after=2016-12-25T17:01:47.138Z \\\n\t-d suggestion_params.internal_status_updated_before=2016-12-25T17:01:47.138Z \\\n\t-d suggestion_params.q=foo \\\n\t-d suggestion_params.*=foo \\\n\t-d activity_params.page=1 \\\n\t-d activity_params.per_page=20 \\\n\t-d activity_params.cursor=foo \\\n\t-d activity_params.period_start=2016-12-25T17:01:47.138Z \\\n\t-d activity_params.period_end=2016-12-25T17:01:47.138Z \\\n\t-d activity_params.sort=id \\\n\t-d activity_params.feature=1,2,3 \\\n\t-d activity_params.user=1,2,3 \\\n\t-d activity_params.suggestion=1,2,3 \\\n\t-d activity_params.kind=foo,bar,baz \\\n\t-d activity_params.state=foo,bar,baz \\\n\t-d activity_params.spam=true \\\n\t-d activity_params.needs_review=true \\\n\t-d activity_params.external_account=1,2,3 \\\n\t-d activity_params.updated_before=2016-12-25T17:01:47.138Z \\\n\t-d activity_params.updated_after=2016-12-25T17:01:47.138Z \\\n\t-d activity_params.forum=1,2,3 \\\n\t-d activity_params.creator=1,2,3 \\\n\t-d activity_params.uncategorized_in_forum=1,2,3 \\\n\t-d activity_params.category_none=true \\\n\t-d activity_params.category=1,2,3 \\\n\t-d activity_params.status_none=true \\\n\t-d activity_params.status=1,2,3 \\\n\t-d activity_params.internal_status_none=true \\\n\t-d activity_params.internal_status=1,2,3 \\\n\t-d activity_params.label=1,2,3 \\\n\t-d activity_params.label_none=true \\\n\t-d activity_params.supporter=1,2,3 \\\n\t-d activity_params.has_response=true \\\n\t-d activity_params.no_engagement_since=2016-12-25T17:01:47.138Z \\\n\t-d activity_params.no_support_since=2016-12-25T17:01:47.138Z \\\n\t-d activity_params.engagement_since=2016-12-25T17:01:47.138Z \\\n\t-d activity_params.created_after=2016-12-25T17:01:47.138Z \\\n\t-d activity_params.created_before=2016-12-25T17:01:47.138Z \\\n\t-d activity_params.has_internal_flag=true \\\n\t-d activity_params.flagged_by_team=1,2,3 \\\n\t-d activity_params.flagged_by_team_none=true \\\n\t-d activity_params.activity=foo,bar,baz \\\n\t-d activity_params.status_updated_after=2016-12-25T17:01:47.138Z \\\n\t-d activity_params.status_updated_before=2016-12-25T17:01:47.138Z \\\n\t-d activity_params.internal_status_updated_after=2016-12-25T17:01:47.138Z \\\n\t-d activity_params.internal_status_updated_before=2016-12-25T17:01:47.138Z \\\n\t-d activity_params.q=foo \\\n\t-d activity_params.*=foo"
                    }
                ]
            }
        },
        "/admin/suggested_merges/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggested_merges"
                ],
                "summary": "Find Suggested Merges",
                "operationId": "FindSuggestedMerges",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "suggestions",
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggested_merges": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SuggestedMerge"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggested_merges/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=suggestions"
                    }
                ]
            }
        },
        "/admin/suggested_merges/{id}/reject": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggested_merges"
                ],
                "summary": "Reject Suggested Merges",
                "operationId": "RejectSuggestedMerges",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RejectSuggestedMergesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggested_merges": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SuggestedMerge"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggested_merges/1/reject \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d reason=foo"
                    }
                ]
            }
        },
        "/admin/suggestion_activity_entries": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestion_activity_entries"
                ],
                "summary": "List Suggestion Activity Entries",
                "operationId": "ListSuggestionActivityEntries",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "comments",
                                "notes",
                                "supporter_messages",
                                "merges",
                                "feedback_records",
                                "supporters",
                                "suggestions",
                                "status_updates",
                                "internal_status_updates",
                                "statuses",
                                "internal_statuses",
                                "forums",
                                "categories",
                                "tickets",
                                "labels",
                                "users",
                                "external_users",
                                "teams",
                                "external_accounts",
                                "product_areas",
                                "fullstory_user_sessions"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "period_start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "period_end",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "created_at",
                            "-created_at",
                            "updated_at",
                            "-updated_at",
                            "title",
                            "-title",
                            "supporters_count",
                            "-supporters_count",
                            "votes_count",
                            "-votes_count",
                            "supporter_mrr",
                            "-supporter_mrr",
                            "supporter_revenue",
                            "-supporter_revenue",
                            "satisfaction_detractor_count",
                            "-satisfaction_detractor_count",
                            "notes_count",
                            "-notes_count",
                            "status_updated_at",
                            "-status_updated_at",
                            "comments_count",
                            "-comments_count",
                            "satisfaction_score",
                            "-satisfaction_score",
                            "supporting_accounts_count",
                            "-supporting_accounts_count",
                            "first_support_at",
                            "-first_support_at",
                            "last_support_at",
                            "-last_support_at",
                            "account_supporters_count",
                            "-account_supporters_count",
                            "jira_status_last_updated_at",
                            "-jira_status_last_updated_at",
                            "jira_link_count",
                            "-jira_link_count",
                            "has_internal_flag",
                            "-has_internal_flag",
                            "vsts_link_count",
                            "-vsts_link_count",
                            "vsts_state_last_updated_at",
                            "-vsts_state_last_updated_at",
                            "hotness",
                            "-hotness",
                            "public_status",
                            "-public_status",
                            "internal_status",
                            "-internal_status",
                            "internal_status_updated_at",
                            "-internal_status_updated_at",
                            "all_internal_flags_count",
                            "-all_internal_flags_count",
                            "internal_flags_count",
                            "-internal_flags_count",
                            "last_internal_flag_at",
                            "-last_internal_flag_at",
                            "activity",
                            "-activity",
                            "search_order",
                            "-search_order",
                            "importance_low",
                            "-importance_low",
                            "importance",
                            "-importance",
                            "importance_medium",
                            "-importance_medium",
                            "importance_high",
                            "-importance_high"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "feature",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "kind",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "published",
                            "approved",
                            "closed",
                            "for_review",
                            "deleted",
                            "merged",
                            "spam",
                            "new",
                            "filtered",
                            "for_moderation",
                            "open",
                            "active",
                            "inactive",
                            "-published",
                            "-approved",
                            "-closed",
                            "-for_review",
                            "-deleted",
                            "-merged",
                            "-spam",
                            "-new",
                            "-filtered"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "spam",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "needs_review",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "external_account",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "forum",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "creator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "uncategorized_in_forum",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "category_none",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "status_none",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "internal_status_none",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "internal_status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "label",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "label_none",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "supporter",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "has_response",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "no_engagement_since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "no_support_since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "engagement_since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "created_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "created_before",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "has_internal_flag",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "flagged_by_team",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "flagged_by_team_none",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "created",
                            "votes",
                            "comments",
                            "importance"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "activity",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "status_updated_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "status_updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "internal_status_updated_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "internal_status_updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "*",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "comments": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Comment"
                                    }
                                },
                                "feedback_records": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FeedbackRecord"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "internal_flags": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalFlag"
                                    }
                                },
                                "internal_status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InternalStatusUpdate"
                                    }
                                },
                                "notes": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Note"
                                    }
                                },
                                "outreaches": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Outreach"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "suggestion_activity_entries": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SuggestionActivityEntry"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestion_activity_entries \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=comments \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d period_start=2016-12-25T17:01:47.138Z \\\n\t-d period_end=2016-12-25T17:01:47.138Z \\\n\t-d sort=id \\\n\t-d feature=1,2,3 \\\n\t-d user=1,2,3 \\\n\t-d suggestion=1,2,3 \\\n\t-d kind=foo,bar,baz \\\n\t-d state=foo,bar,baz \\\n\t-d spam=true \\\n\t-d needs_review=true \\\n\t-d external_account=1,2,3 \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d forum=1,2,3 \\\n\t-d creator=1,2,3 \\\n\t-d uncategorized_in_forum=1,2,3 \\\n\t-d category_none=true \\\n\t-d category=1,2,3 \\\n\t-d status_none=true \\\n\t-d status=1,2,3 \\\n\t-d internal_status_none=true \\\n\t-d internal_status=1,2,3 \\\n\t-d label=1,2,3 \\\n\t-d label_none=true \\\n\t-d supporter=1,2,3 \\\n\t-d has_response=true \\\n\t-d no_engagement_since=2016-12-25T17:01:47.138Z \\\n\t-d no_support_since=2016-12-25T17:01:47.138Z \\\n\t-d engagement_since=2016-12-25T17:01:47.138Z \\\n\t-d created_after=2016-12-25T17:01:47.138Z \\\n\t-d created_before=2016-12-25T17:01:47.138Z \\\n\t-d has_internal_flag=true \\\n\t-d flagged_by_team=1,2,3 \\\n\t-d flagged_by_team_none=true \\\n\t-d activity=foo,bar,baz \\\n\t-d status_updated_after=2016-12-25T17:01:47.138Z \\\n\t-d status_updated_before=2016-12-25T17:01:47.138Z \\\n\t-d internal_status_updated_after=2016-12-25T17:01:47.138Z \\\n\t-d internal_status_updated_before=2016-12-25T17:01:47.138Z \\\n\t-d q=foo \\\n\t-d *=foo"
                    }
                ]
            }
        },
        "/admin/suggestions": {
            "get": {
                "description": "\nReturns a paginated list of suggestions.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "List Suggestions",
                "operationId": "ListSuggestions",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "features",
                                "labels",
                                "forums",
                                "status_updates",
                                "internal_status_updates",
                                "supporter_messages",
                                "tickets",
                                "users",
                                "statuses",
                                "categories",
                                "nps_ratings",
                                "parent_suggestions",
                                "jira_issues",
                                "vsts_work_items",
                                "fullstory_user_sessions"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "\nPagination token, used to paginate through results.\n",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "\nFunctionality that the date filter uses in the Admin console.\n",
                        "name": "period_start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "\nFunctionality that the date filter uses in the Admin console.\n",
                        "name": "period_end",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "created_at",
                            "-created_at",
                            "updated_at",
                            "-updated_at",
                            "title",
                            "-title",
                            "supporters_count",
                            "-supporters_count",
                            "votes_count",
                            "-votes_count",
                            "supporter_mrr",
                            "-supporter_mrr",
                            "supporter_revenue",
                            "-supporter_revenue",
                            "satisfaction_detractor_count",
                            "-satisfaction_detractor_count",
                            "notes_count",
                            "-notes_count",
                            "status_updated_at",
                            "-status_updated_at",
                            "comments_count",
                            "-comments_count",
                            "satisfaction_score",
                            "-satisfaction_score",
                            "supporting_accounts_count",
                            "-supporting_accounts_count",
                            "first_support_at",
                            "-first_support_at",
                            "last_support_at",
                            "-last_support_at",
                            "account_supporters_count",
                            "-account_supporters_count",
                            "jira_status_last_updated_at",
                            "-jira_status_last_updated_at",
                            "jira_link_count",
                            "-jira_link_count",
                            "has_internal_flag",
                            "-has_internal_flag",
                            "vsts_link_count",
                            "-vsts_link_count",
                            "vsts_state_last_updated_at",
                            "-vsts_state_last_updated_at",
                            "hotness",
                            "-hotness",
                            "public_status",
                            "-public_status",
                            "internal_status",
                            "-internal_status",
                            "internal_status_updated_at",
                            "-internal_status_updated_at",
                            "all_internal_flags_count",
                            "-all_internal_flags_count",
                            "internal_flags_count",
                            "-internal_flags_count",
                            "last_internal_flag_at",
                            "-last_internal_flag_at",
                            "activity",
                            "-activity",
                            "search_order",
                            "-search_order",
                            "importance_low",
                            "-importance_low",
                            "importance",
                            "-importance",
                            "importance_medium",
                            "-importance_medium",
                            "importance_high",
                            "-importance_high"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "forum",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "creator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "uncategorized_in_forum",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "category_none",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "status_none",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "internal_status_none",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "internal_status",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "published",
                            "approved",
                            "closed",
                            "for_review",
                            "deleted",
                            "merged",
                            "spam",
                            "new",
                            "filtered",
                            "for_moderation",
                            "open",
                            "active",
                            "inactive",
                            "-published",
                            "-approved",
                            "-closed",
                            "-for_review",
                            "-deleted",
                            "-merged",
                            "-spam",
                            "-new",
                            "-filtered"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "x-example": "published,approved",
                        "description": "\n* - `new`: recently created\n* - `filtered`: held for moderation\n* - `for_review`: flagged for review\n* - `published`: made from web portal and didn't go to moderation\n* - `approved`: approved by an admin, or made by an admin in the admin console\n* - `merged`: merged into another suggestion\n* - `closed`: assigned a closed status\n* - `deleted`: deleted by admin user\n* - `spam`: marked as spam\n\nPrepend a state value with `-` to exclude suggestions with that state.\n",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "label",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "label_none",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "description": "\nAKA: Voter.\n",
                        "name": "supporter",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "external_account",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "feature",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "has_response",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "no_engagement_since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "no_support_since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "engagement_since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "created_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "created_before",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "has_internal_flag",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "flagged_by_team",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "flagged_by_team_none",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "created",
                            "votes",
                            "comments",
                            "importance"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "activity",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "status_updated_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "status_updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "internal_status_updated_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "internal_status_updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "\nQuery string search that pulls results where the Idea `title` or `description` returns a match.\n",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "*",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Shell",
                        "source": "\ncurl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions \\\n\t-X \"GET\" \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=labels \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2019-12-25T17:01:47.138Z \\\n\t-d updated_after=2019-12-25T17:01:47.138Z \\\n\t-d sort=id \\\n\t-d forum=1,2,3 \\\n\t-d creator=1,2,3 \\\n\t-d uncategorized_in_forum=1,2,3 \\\n\t-d category_none=true \\\n\t-d category=1,2,3 \\\n\t-d status_none=true \\\n\t-d status=1,2,3 \\\n\t-d internal_status_none=true \\\n\t-d internal_status=1,2,3 \\\n\t-d state=published,approved \\\n\t-d label=1,2,3 \\\n\t-d label_none=true \\\n\t-d supporter=1,2,3 \\\n\t-d external_account=1,2,3 \\\n\t-d feature=1,2,3 \\\n\t-d has_response=true \\\n\t-d no_engagement_since=2019-12-25T17:01:47.138Z \\\n\t-d no_support_since=2019-12-25T17:01:47.138Z \\\n\t-d engagement_since=2019-12-25T17:01:47.138Z \\\n\t-d following=true \\\n\t-d owner=1,2,3 \\\n\t-d owner_none=true \\\n\t-d period_start=2019-12-25T17:01:47.138Z \\\n\t-d period_end=2019-12-25T17:01:47.138Z \\\n\t-d q=idea"
                    }
                ]
            },
            "post": {
                "description": "\n_Create_ *suggestions*.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Create Suggestions",
                "operationId": "CreateSuggestions",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateSuggestionsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Shell",
                        "source": "\ncurl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions \\\n\t-X \"POST\" \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d title=foo \\\n\t-d body=foo \\\n\t-d body_mime_type=text/plain \\\n\t-d created_at=2019-12-25T17:01:47.138Z \\\n\t-d attachment_tokens=foo,bar,test \\\n\t-d channel=api \\\n\t-d subscribe_creator=true \\\n\t-d links.forum=1 \\\n\t-d links.category=1 \\\n\t-d links.status=1"
                    }
                ]
            }
        },
        "/admin/suggestions/import": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Import Suggestions",
                "operationId": "ImportSuggestions",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ImportSuggestionsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/import \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d attachment_tokens=foo,bar,baz \\\n\t-d body=foo \\\n\t-d body_mime_type=text/plain \\\n\t-d category_name=foo \\\n\t-d created_at=2016-12-25T17:01:47.138Z \\\n\t-d forum_name=foo \\\n\t-d internal_status_name=foo \\\n\t-d links.category=1 \\\n\t-d links.forum=1 \\\n\t-d links.internal_status=1 \\\n\t-d links.labels=1,2,3 \\\n\t-d links.status=1 \\\n\t-d links.user=1 \\\n\t-d referrer=foo \\\n\t-d send_autoreply_email=true \\\n\t-d state=published \\\n\t-d status_name=foo \\\n\t-d status_update_body=foo \\\n\t-d status_update_created_at=2016-12-25T17:01:47.138Z \\\n\t-d status_update_created_by_email=foo \\\n\t-d status_update_html_body=foo \\\n\t-d title=foo \\\n\t-d user_agent=foo \\\n\t-d user_email=foo \\\n\t-d user_name=foo \\\n\t-d user_subscribed=true"
                    }
                ]
            }
        },
        "/admin/suggestions/link_to_feature": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Link-To-Feature Suggestions",
                "operationId": "LinkToFeatureSuggestions",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LinkToFeatureSuggestionsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/link_to_feature \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d links.feature=1,2,3 \\\n\t-d links.suggestion=1,2,3"
                    }
                ]
            }
        },
        "/admin/suggestions/merge": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Merge Suggestions",
                "operationId": "MergeSuggestions",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MergeSuggestionsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/merge \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d links.from_suggestion=1 \\\n\t-d links.to_suggestion=1 \\\n\t-d notify_supporters=true \\\n\t-d reply_to=foo"
                    }
                ]
            }
        },
        "/admin/suggestions/unlink_from_feature": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Unlink-From-Feature Suggestions",
                "operationId": "UnlinkFromFeatureSuggestions",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UnlinkFromFeatureSuggestionsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/unlink_from_feature \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d links.feature=1,2,3 \\\n\t-d links.suggestion=1,2,3"
                    }
                ]
            }
        },
        "/admin/suggestions/unlink_jira_issue/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "[BETA] Unlink a Jira Issue from a suggestion",
                "operationId": "UnlinkJiraIssueSuggestions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiDeleteResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/unlink_jira_issue/1 \\\n\t-X DELETE \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/suggestions/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Find Suggestions",
                "operationId": "FindSuggestions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "features",
                                "labels",
                                "forums",
                                "status_updates",
                                "internal_status_updates",
                                "supporter_messages",
                                "tickets",
                                "users",
                                "statuses",
                                "categories",
                                "nps_ratings",
                                "parent_suggestions",
                                "jira_issues",
                                "vsts_work_items",
                                "fullstory_user_sessions"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=features"
                    }
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Update Suggestions",
                "operationId": "UpdateSuggestions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateSuggestionsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/1 \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d attachment_tokens=foo,bar,baz \\\n\t-d body=foo \\\n\t-d body_mime_type=text/plain \\\n\t-d links.category=1 \\\n\t-d links.forum=1 \\\n\t-d title=foo"
                    }
                ]
            }
        },
        "/admin/suggestions/{id}/approve": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Approve Suggestions",
                "operationId": "ApproveSuggestions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/1/approve \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/suggestions/{id}/delete": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Delete Suggestions",
                "operationId": "DeleteSuggestions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/1/delete \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/suggestions/{id}/feature_ids": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Feature-Ids Suggestions",
                "operationId": "FeatureIdsSuggestions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MapResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/1/feature_ids \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G"
                    }
                ]
            }
        },
        "/admin/suggestions/{id}/link_jira_issue": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Link a Jira Issue to a suggestion",
                "operationId": "LinkJiraIssueSuggestions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LinkJiraIssueSuggestionsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/1/link_jira_issue \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d jira_key=foo"
                    }
                ]
            }
        },
        "/admin/suggestions/{id}/link_vsts": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions",
                    "alpha"
                ],
                "summary": "Link a VSTS Work Item to a suggestion",
                "operationId": "LinkVstsSuggestions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LinkVstsSuggestionsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/1/link_vsts \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d id=1 \\\n\t-d work_item=foo"
                    }
                ]
            }
        },
        "/admin/suggestions/{id}/publish": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Publish Suggestions",
                "operationId": "PublishSuggestions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/1/publish \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/suggestions/{id}/restore": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Restore Suggestions",
                "operationId": "RestoreSuggestions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/1/restore \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/suggestions/{id}/spam": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Mark a suggestion as spam",
                "operationId": "SpamSuggestions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/1/spam \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/suggestions/{id}/subscribe": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Subscribe Suggestions",
                "operationId": "SubscribeSuggestions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscribeSuggestionsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/1/subscribe \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d channel=api \\\n\t-d user.email=foo \\\n\t-d user.id=1 \\\n\t-d user.name=foo"
                    }
                ]
            }
        },
        "/admin/suggestions/{id}/unmerge": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Unmerge Suggestions",
                "operationId": "UnmergeSuggestions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/1/unmerge \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/suggestions/{id}/unsubscribe": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suggestions"
                ],
                "summary": "Unsubscribe Suggestions",
                "operationId": "UnsubscribeSuggestions",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UnsubscribeSuggestionsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feature"
                                    }
                                },
                                "forums": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Forum"
                                    }
                                },
                                "fullstory_user_sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullstoryUserSession"
                                    }
                                },
                                "jira_issues": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JiraIssue"
                                    }
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Label"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "status_updates": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StatusUpdate"
                                    }
                                },
                                "statuses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Status"
                                    }
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "tickets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "vsts_work_items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VstsWorkItem"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/suggestions/1/unsubscribe \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d remove_vote=true \\\n\t-d user.email=foo \\\n\t-d user.id=1 \\\n\t-d user.name=foo"
                    }
                ]
            }
        },
        "/admin/supporter_messages": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supporter_messages"
                ],
                "summary": "List Supporter Messages",
                "operationId": "ListSupporterMessages",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "suggestions",
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "created_at",
                            "-created_at"
                        ],
                        "type": "string",
                        "default": "-created_at",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/supporter_messages \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=suggestions \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=-created_at \\\n\t-d suggestion=1,2,3"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supporter_messages"
                ],
                "summary": "Create Supporter Messages",
                "operationId": "CreateSupporterMessages",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateSupporterMessagesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/supporter_messages \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d attachment_tokens=foo,bar,baz \\\n\t-d body=foo \\\n\t-d email_subject=foo \\\n\t-d from_email=foo \\\n\t-d links.suggestion=1 \\\n\t-d notification_email_address=foo"
                    }
                ]
            }
        },
        "/admin/supporter_messages/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supporter_messages"
                ],
                "summary": "Find Supporter Messages",
                "operationId": "FindSupporterMessages",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "suggestions",
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporter_messages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SupporterMessage"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/supporter_messages/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=suggestions"
                    }
                ]
            }
        },
        "/admin/supporters": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supporters"
                ],
                "summary": "List Supporters",
                "operationId": "ListSupporters",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "suggestions",
                                "users",
                                "nps_ratings",
                                "external_users",
                                "external_accounts"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "period_start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "period_end",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "created_at",
                            "-created_at",
                            "updated_at",
                            "-updated_at"
                        ],
                        "type": "string",
                        "default": "-updated_at",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "forum",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "external_account",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "supporters": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Supporter"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/supporters \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=suggestions \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d period_start=2016-12-25T17:01:47.138Z \\\n\t-d period_end=2016-12-25T17:01:47.138Z \\\n\t-d sort=-updated_at \\\n\t-d suggestion=1,2,3 \\\n\t-d user=1,2,3 \\\n\t-d forum=1,2,3 \\\n\t-d external_account=1,2,3"
                    }
                ]
            }
        },
        "/admin/teams": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "List Teams",
                "operationId": "ListTeams",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "name",
                            "-name"
                        ],
                        "type": "string",
                        "default": "-id",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "user",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "teams": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Team"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/teams \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=-id \\\n\t-d user=1,2,3"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Create Teams",
                "operationId": "CreateTeams",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateTeamsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "teams": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Team"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/teams \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d name=foo"
                    }
                ]
            }
        },
        "/admin/teams/assign": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Assign Teams",
                "operationId": "AssignTeams",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AssignTeamsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "teams": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Team"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/teams/assign \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d links.team=1,2,3 \\\n\t-d links.user=1,2,3"
                    }
                ]
            }
        },
        "/admin/teams/unassign": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Unassign Teams",
                "operationId": "UnassignTeams",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UnassignTeamsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "teams": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Team"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/teams/unassign \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d links.team=1,2,3 \\\n\t-d links.user=1,2,3"
                    }
                ]
            }
        },
        "/admin/teams/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Find Teams",
                "operationId": "FindTeams",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "teams": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Team"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/teams/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G"
                    }
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Update Teams",
                "operationId": "UpdateTeams",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateTeamsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "teams": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Team"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/teams/1 \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d name=foo"
                    }
                ]
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Delete Teams",
                "operationId": "DeleteTeams",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiDeleteResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/teams/1 \\\n\t-X DELETE \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/translatable_strings": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "translatable_strings",
                    "alpha"
                ],
                "summary": "List Translatable Strings",
                "operationId": "ListTranslatableStrings",
                "parameters": [
                    {
                        "type": "string",
                        "name": "locale",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MapResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "category.1.name": "Category 1 Name in Default Locale",
                                "forum.2.name": "Forum 2 Name in Default Locale",
                                "forum.2.placeholder": "Forum 2 Placeholder in Default Locale",
                                "forum.2.prompt": "Forum 2 Prompt in Default Locale",
                                "forum.2.welcome_message": "Forum 2 Welcome Welcome in Default Locale",
                                "site.title": "Site Title in Default Locale",
                                "site.welcome_message": "Site Title in Default Locale",
                                "status.3.name": "Status 3 Name in Default Locale"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/translatable_strings \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d locale=foo"
                    }
                ]
            }
        },
        "/admin/translatable_strings/{locale}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "translatable_strings",
                    "alpha"
                ],
                "summary": "Get translatable strings for a specific locale",
                "operationId": "ListTranslatableStringsByLocale",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "locale",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "locale",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MapResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "category.1.name": "Category 1 Name in :locale",
                                "forum.2.name": "Forum 2 Name in :locale",
                                "forum.2.placeholder": "Forum 2 Placeholder in :locale",
                                "forum.2.prompt": "Forum 2 Prompt in :locale",
                                "forum.2.welcome_message": "Forum 2 Welcome Welcome in :locale",
                                "site.title": "Site Title in :locale",
                                "site.welcome_message": "Site Title in :locale",
                                "status.3.name": "Status 3 Name in :locale"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/translatable_strings/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d locale=foo"
                    }
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "translatable_strings",
                    "alpha"
                ],
                "summary": "Update Translatable Strings",
                "operationId": "UpdateTranslatableStringsByLocale",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "locale",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateTranslatableStringsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MapResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "category.1.name": "Updated Category 1 Name in :locale",
                                "forum.2.name": "Updated Forum 2 Name in :locale",
                                "forum.2.placeholder": "Updated Forum 2 Placeholder in :locale",
                                "forum.2.prompt": "Updated Forum 2 Prompt in :locale",
                                "forum.2.welcome_message": "Updated Forum 2 Welcome Welcome in :locale",
                                "site.title": "Updated Site Title in :locale",
                                "site.welcome_message": "Updated Site Title in :locale",
                                "status.3.name": "Updated Status 3 Name in :locale"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/translatable_strings/1 \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d locale=foo"
                    }
                ]
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "translatable_strings",
                    "alpha"
                ],
                "summary": "Delete Translatable Strings",
                "operationId": "DeleteTranslatableStringsByLocale",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "locale",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteTranslatableStringsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MapResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/translatable_strings/1 \\\n\t-X DELETE \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d locale=foo"
                    }
                ]
            }
        },
        "/admin/users": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List Users",
                "operationId": "ListUsers",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "teams",
                                "external_users",
                                "external_accounts",
                                "nps_ratings",
                                "crm_accounts"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "created_at",
                            "-created_at",
                            "updated_at",
                            "-updated_at",
                            "last_login",
                            "-last_login",
                            "name",
                            "-name",
                            "license_type",
                            "-license_type",
                            "ltv",
                            "-ltv",
                            "mrr",
                            "-mrr",
                            "revenue",
                            "-revenue",
                            "support_created_at",
                            "-support_created_at",
                            "country",
                            "-country",
                            "account",
                            "-account",
                            "importance",
                            "-importance"
                        ],
                        "type": "string",
                        "default": "-created_at",
                        "description": "Specify custom field sorting by object and key, e.g. 'external_users.cf_persona'. Text custom fields cannot be sorted.",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "expression.operator",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "expression.column",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "expression.operand",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "expression.unit",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "email_address",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "allowed_state",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "license_type",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "permission_state",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "team",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "external_account",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "suggestion",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "csv",
                        "name": "feature",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "supported",
                            "contributed",
                            "engaged"
                        ],
                        "type": "string",
                        "default": "supported",
                        "name": "association",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "subscribed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "external_users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalUser"
                                    }
                                },
                                "nps_ratings": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NPSRating"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "supporters": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Supporter"
                                    }
                                },
                                "teams": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Team"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/users \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=teams \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d sort=-created_at \\\n\t-d q=foo \\\n\t-d expression.operator=foo \\\n\t-d expression.column=foo \\\n\t-d expression.operand=foo \\\n\t-d expression.unit=foo \\\n\t-d email_address=foo,bar,baz \\\n\t-d allowed_state=foo,bar,baz \\\n\t-d license_type=foo,bar,baz \\\n\t-d permission_state=foo,bar,baz \\\n\t-d team=1,2,3 \\\n\t-d external_account=1,2,3 \\\n\t-d suggestion=1,2,3 \\\n\t-d feature=1,2,3 \\\n\t-d association=supported \\\n\t-d subscribed=true"
                    }
                ]
            }
        },
        "/admin/users/current": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Current Users",
                "operationId": "CurrentUsers",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "teams",
                                "external_users",
                                "external_accounts",
                                "nps_ratings",
                                "crm_accounts"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "external_users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalUser"
                                    }
                                },
                                "nps_ratings": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NPSRating"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "supporters": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Supporter"
                                    }
                                },
                                "teams": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Team"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/users/current \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=teams"
                    }
                ]
            }
        },
        "/admin/users/find_or_create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Find-Or-Create Users",
                "operationId": "FindOrCreateUsers",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FindOrCreateUsersBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "external_users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalUser"
                                    }
                                },
                                "nps_ratings": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NPSRating"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "supporters": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Supporter"
                                    }
                                },
                                "teams": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Team"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/users/find_or_create \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d email=foo \\\n\t-d name=foo"
                    }
                ]
            }
        },
        "/admin/users/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Find Users",
                "operationId": "FindUsers",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "teams",
                                "external_users",
                                "external_accounts",
                                "nps_ratings",
                                "crm_accounts"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "external_users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalUser"
                                    }
                                },
                                "nps_ratings": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NPSRating"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "supporters": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Supporter"
                                    }
                                },
                                "teams": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Team"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/users/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=teams"
                    }
                ]
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user and anonymize user-submitted content. Implements GDPR Right to Erasure and Opt-out.",
                "operationId": "DeleteUsers",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiDeleteResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/users/1 \\\n\t-X DELETE \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/users/{id}/block": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Block Users",
                "operationId": "BlockUsers",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "external_users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalUser"
                                    }
                                },
                                "nps_ratings": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NPSRating"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "supporters": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Supporter"
                                    }
                                },
                                "teams": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Team"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/users/1/block \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/users/{id}/export": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Export all user-submitted data to the provided user, including: submitted ideas, supported ideas, comments, ticket messages, and uploads. Implements GDPR Right to Access.",
                "operationId": "ExportUsers",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportUsersBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "external_users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalUser"
                                    }
                                },
                                "nps_ratings": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NPSRating"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "supporters": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Supporter"
                                    }
                                },
                                "teams": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Team"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/users/1/export \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d message=foo"
                    }
                ]
            }
        },
        "/admin/users/{id}/unblock": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Unblock Users",
                "operationId": "UnblockUsers",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "external_users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExternalUser"
                                    }
                                },
                                "nps_ratings": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NPSRating"
                                    }
                                },
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "supporters": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Supporter"
                                    }
                                },
                                "teams": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Team"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/users/1/unblock \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/views": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "List Views",
                "operationId": "ListViews",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "default": 20,
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records before this time",
                        "name": "updated_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter for records after this time",
                        "name": "updated_after",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "-id",
                            "position",
                            "-position"
                        ],
                        "type": "string",
                        "default": "-position",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "views": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/View"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/views \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users \\\n\t-d page=1 \\\n\t-d per_page=20 \\\n\t-d cursor=foo \\\n\t-d updated_before=2016-12-25T17:01:47.138Z \\\n\t-d updated_after=2016-12-25T17:01:47.138Z \\\n\t-d user=1 \\\n\t-d kind=foo,bar,baz \\\n\t-d state=foo \\\n\t-d sort=-position"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Create Views",
                "operationId": "CreateViews",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateViewsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "views": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/View"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/views \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d kind=suggestions \\\n\t-d links.user=1 \\\n\t-d name=foo \\\n\t-d params=foo \\\n\t-d sub_kind=suggestion_activity_entries \\\n\t-d subscribed=false \\\n\t-d subscription_params=foo"
                    }
                ]
            }
        },
        "/admin/views/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Find Views",
                "operationId": "FindViews",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "users"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "includes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "views": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/View"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/views/1 \\\n\t-X GET \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-G \\\n\t-d includes=users"
                    }
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Update Views",
                "operationId": "UpdateViews",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateViewsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "views": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/View"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/views/1 \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d name=foo \\\n\t-d params=foo \\\n\t-d position=1 \\\n\t-d subscribed=true \\\n\t-d subscription_params=foo"
                    }
                ]
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Delete Views",
                "operationId": "DeleteViews",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiDeleteResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/views/1 \\\n\t-X DELETE \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\""
                    }
                ]
            }
        },
        "/admin/views/{id}/share": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "views"
                ],
                "summary": "Share Views",
                "operationId": "ShareViews",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShareViewsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pagination": {
                                    "$ref": "#/definitions/CollectionPagination"
                                },
                                "suggestions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Suggestion"
                                    }
                                },
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "views": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/View"
                                    }
                                }
                            }
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/admin/views/1/share \\\n\t-X PUT \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d is_public=false \\\n\t-d user_ids=1,2,3"
                    }
                ]
            }
        },
        "/oauth/revoke": {
            "post": {
                "security": [],
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "oauth"
                ],
                "summary": "Revoke an OAuth token",
                "operationId": "RevokeOauth",
                "parameters": [
                    {
                        "type": "string",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "client_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "client_secret",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiOAuthRevokeResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "success": true
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/oauth/revoke \\\n\t-X POST \\\n\t-H \"Authorization: Bearer \u003ctoken\u003e\" \\\n\t-d token=foo \\\n\t-d client_id=foo \\\n\t-d client_secret=foo"
                    }
                ]
            }
        },
        "/oauth/token": {
            "post": {
                "security": [],
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "oauth"
                ],
                "summary": "Get an OAuth token",
                "operationId": "TokenOauth",
                "parameters": [
                    {
                        "enum": [
                            "authorization_code",
                            "client_credentials"
                        ],
                        "type": "string",
                        "name": "grant_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "client_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "client_secret",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "code_verifier",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OauthToken"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "access_token": "ffffdf89cf5fbfcf"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/RateLimitErrorResponse"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of allowed requests in the current period"
                            },
                            "X-Rate-Limit-Remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of remaining requests in the current period"
                            },
                            "X-Rate-Limit-Reset": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The number of seconds left in the current period"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "label": "curl",
                        "lang": "Shell",
                        "source": "curl https://\u003csubdomain\u003e.uservoice.com/api/v2/oauth/token \\\n\t-X POST \\\n\t-d grant_type=authorization_code \\\n\t-d client_id=foo \\\n\t-d client_secret=foo \\\n\t-d code=foo \\\n\t-d code_verifier=foo"
                    }
                ]
            }
        }
    },
    "definitions": {
        "ActivityAnalysis": {
            "type": "object",
            "properties": {
                "new_customers": {
                    "type": "integer",
                    "format": "int64"
                },
                "new_revenue": {
                    "type": "integer",
                    "format": "int64"
                },
                "new_users": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "AdminPermission": {
            "type": "object",
            "properties": {
                "billing": {
                    "type": "string"
                },
                "features": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "knowledgebase": {
                    "type": "string"
                },
                "license_type": {
                    "type": "string"
                },
                "settings": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "suggestions": {
                    "type": "string"
                },
                "tickets": {
                    "type": "string"
                }
            }
        },
        "ApiDeleteResponse": {
            "type": "object",
            "properties": {
                "object_deleted": {
                    "type": "boolean"
                }
            }
        },
        "ApiOAuthRevokeResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "AssignTeamsBody": {
            "type": "object",
            "required": [
                "links"
            ],
            "properties": {
                "links": {
                    "x-nullable": false,
                    "$ref": "#/definitions/AssignTeamsBodyLinks"
                }
            }
        },
        "AssignTeamsBodyLinks": {
            "type": "object",
            "required": [
                "team",
                "user"
            ],
            "properties": {
                "team": {
                    "type": "array",
                    "title": "team",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": false
                },
                "user": {
                    "type": "array",
                    "title": "user",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": false
                }
            }
        },
        "AttachLabelsBody": {
            "type": "object",
            "required": [
                "links"
            ],
            "properties": {
                "links": {
                    "x-nullable": false,
                    "$ref": "#/definitions/AttachLabelsBodyLinks"
                }
            }
        },
        "AttachLabelsBodyLinks": {
            "type": "object",
            "required": [
                "label",
                "suggestion"
            ],
            "properties": {
                "label": {
                    "type": "integer",
                    "format": "int64",
                    "title": "label",
                    "x-nullable": false
                },
                "suggestion": {
                    "type": "integer",
                    "format": "int64",
                    "title": "suggestion",
                    "x-nullable": false
                }
            }
        },
        "Attachment": {
            "type": "object",
            "properties": {
                "content_type": {
                    "type": "string",
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "file_name": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "comment": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "feature": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "internal_status_update": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "roadmap_item": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "status_update": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "suggestion": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "supporter_message": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "size_in_bytes": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "thumb_url": {
                    "type": "string",
                    "x-nullable": true
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "BatchExternalAccountsBody": {
            "type": "object",
            "required": [
                "accounts"
            ],
            "properties": {
                "accounts": {
                    "type": "array",
                    "maxItems": 1000,
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/BatchExternalAccountsBodyAccounts"
                    },
                    "x-nullable": false
                }
            }
        },
        "BatchExternalAccountsBodyAccounts": {
            "type": "object",
            "required": [
                "external_id"
            ],
            "properties": {
                "external_created_at": {
                    "description": "Date account was created in your system. Expected format: 2017-01-01T01:00:00Z",
                    "type": "string",
                    "format": "date-time",
                    "title": "external_created_at",
                    "x-nullable": true
                },
                "external_id": {
                    "description": "Account ID in your system.",
                    "type": "string",
                    "title": "external_id",
                    "maxLength": 255,
                    "x-nullable": false
                },
                "name": {
                    "description": "Account name in your system. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "name",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "plan": {
                    "description": "Plan name of account. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "plan",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "revenue": {
                    "type": "number",
                    "format": "double",
                    "title": "revenue",
                    "maximum": 999999999999999,
                    "x-nullable": true
                }
            },
            "additionalProperties": true
        },
        "BatchExternalUsersBody": {
            "type": "object",
            "required": [
                "users"
            ],
            "properties": {
                "users": {
                    "type": "array",
                    "maxItems": 1000,
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/BatchExternalUsersBodyUsers"
                    },
                    "x-nullable": false
                }
            }
        },
        "BatchExternalUsersBodyUsers": {
            "type": "object",
            "required": [
                "external_id"
            ],
            "properties": {
                "account": {
                    "x-nullable": true,
                    "$ref": "#/definitions/BatchExternalUsersBodyUsersAccount"
                },
                "email": {
                    "description": "Primary way we link the external user to the user's UV profile. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "email",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "external_created_at": {
                    "description": "Date user was created in your system. Expected format: 2017-01-01T01:00:00Z",
                    "type": "string",
                    "format": "date-time",
                    "title": "external_created_at",
                    "x-nullable": true
                },
                "external_id": {
                    "description": "User ID in your system. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "external_id",
                    "maxLength": 255,
                    "x-nullable": false
                },
                "ip": {
                    "description": "Defaults to IP address as determined by UserVoice. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "ip",
                    "x-nullable": true
                },
                "name": {
                    "description": "Name of the user. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "name",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "type": {
                    "description": "Type for the user, e.g. 'admin' or 'owner'. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "type",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "user_id": {
                    "description": "User's ID in UserVoice. If you pass a UV ID, we will use it to link to an existing UV Profile rather than email.",
                    "type": "integer",
                    "format": "int64",
                    "title": "user_id",
                    "x-nullable": true
                }
            },
            "additionalProperties": true
        },
        "BatchExternalUsersBodyUsersAccount": {
            "type": "object",
            "required": [
                "external_id"
            ],
            "properties": {
                "external_created_at": {
                    "description": "Date account was created in your system. Expected format: 2017-01-01T01:00:00Z",
                    "type": "string",
                    "format": "date-time",
                    "title": "external_created_at",
                    "x-nullable": true
                },
                "external_id": {
                    "description": "Account ID in your system.",
                    "type": "string",
                    "title": "external_id",
                    "maxLength": 255,
                    "x-nullable": false
                },
                "name": {
                    "description": "Account name in your system. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "name",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "plan": {
                    "description": "Plan name of account. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "plan",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "revenue": {
                    "type": "number",
                    "format": "double",
                    "title": "revenue",
                    "maximum": 999999999999999,
                    "x-nullable": true
                }
            },
            "additionalProperties": true
        },
        "BuilderExpression": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "x-nullable": true
                },
                "expressions": {
                    "type": "array",
                    "items": {
                        "x-nullable": true,
                        "$ref": "#/definitions/BuilderExpression"
                    },
                    "x-nullable": true
                },
                "operand": {
                    "x-nullable": true,
                    "$ref": "#/definitions/BuilderOperand"
                },
                "operator": {
                    "type": "string",
                    "x-nullable": true
                },
                "unit": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "BuilderOperand": {
            "type": "object",
            "properties": {
                "val": {
                    "x-go-interface": true
                }
            }
        },
        "BulkDeleteByExternalIdExternalAccountsBody": {
            "type": "object",
            "required": [
                "external_ids"
            ],
            "properties": {
                "external_ids": {
                    "type": "array",
                    "title": "external_ids",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": false
                }
            }
        },
        "BulkDeleteByExternalIdExternalUsersBody": {
            "type": "object",
            "required": [
                "external_ids"
            ],
            "properties": {
                "external_ids": {
                    "type": "array",
                    "title": "external_ids",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": false
                }
            }
        },
        "BulkDeleteExternalAccountsBody": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "description": "These are the internal IDs of the account objects. See bulk_delete_by_external_id to delete by the external_id of an account.",
                    "type": "array",
                    "title": "ids",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": false
                }
            }
        },
        "BulkDeleteExternalUsersBody": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "title": "ids",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": false
                }
            }
        },
        "BulkDeleteNpsRatingsBody": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "description": "These are the internal IDs of the satisfaction rating objects.",
                    "type": "array",
                    "title": "ids",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": false
                }
            }
        },
        "Category": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "forum": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "open_suggestions_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "suggestions_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "ClearInternalFlagsBody": {
            "type": "object",
            "properties": {
                "cleared_message": {
                    "type": "string",
                    "title": "cleared_message",
                    "x-nullable": true
                }
            }
        },
        "CollectionPagination": {
            "type": "object",
            "properties": {
                "cursor": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "format": "int64"
                },
                "per_page": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_pages": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_records": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CommMetadata": {
            "type": "object",
            "properties": {
                "message_count": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Comment": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "body_mime_type": {
                    "type": "string"
                },
                "channel": {
                    "type": "string",
                    "x-nullable": true
                },
                "comm_metadata": {
                    "x-nullable": true,
                    "$ref": "#/definitions/CommMetadata"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "inappropriate_flags_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_admin_comment": {
                    "type": "boolean"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "created_by": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "fullstory_user_session": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "suggestion": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "state": {
                    "type": "string",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "CreateCategoriesBody": {
            "type": "object",
            "required": [
                "name",
                "links"
            ],
            "properties": {
                "links": {
                    "x-nullable": false,
                    "$ref": "#/definitions/CreateCategoriesBodyLinks"
                },
                "name": {
                    "type": "string",
                    "title": "name",
                    "x-nullable": false
                }
            }
        },
        "CreateCategoriesBodyLinks": {
            "type": "object",
            "required": [
                "forum"
            ],
            "properties": {
                "forum": {
                    "type": "integer",
                    "format": "int64",
                    "title": "forum",
                    "x-nullable": false
                }
            }
        },
        "CreateCommentsBody": {
            "type": "object",
            "required": [
                "body",
                "links"
            ],
            "properties": {
                "attachment_tokens": {
                    "type": "array",
                    "title": "attachment_tokens",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "body": {
                    "description": "\nThe body parameter in the request body.\n",
                    "type": "string",
                    "title": "body",
                    "x-nullable": false,
                    "example": "\"This is a great idea! I love it!\""
                },
                "body_mime_type": {
                    "type": "string",
                    "title": "body_mime_type",
                    "default": "text/plain",
                    "enum": [
                        "text/plain"
                    ],
                    "x-nullable": true
                },
                "channel": {
                    "description": "\nThe comment channel, which can be any of:\n- `api` \n- `admin` = admin console\n- `zendesk` = Zendesk integration\n- `bookmarklet` = contributor sidebar\n- `widget` = UserVoice widget\n- `import` = idea import from CSV\n- `portal` = web portal\n",
                    "type": "string",
                    "title": "channel",
                    "default": "api",
                    "enum": [
                        "api",
                        "admin",
                        "import",
                        "portal",
                        "ios",
                        "android",
                        "unknown"
                    ],
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "created_at",
                    "x-nullable": true
                },
                "links": {
                    "x-nullable": false,
                    "$ref": "#/definitions/CreateCommentsBodyLinks"
                },
                "user": {
                    "title": "user",
                    "x-nullable": true,
                    "$ref": "#/definitions/UserRef"
                }
            }
        },
        "CreateCommentsBodyLinks": {
            "type": "object",
            "required": [
                "suggestion"
            ],
            "properties": {
                "suggestion": {
                    "description": "\nWhether to include the _suggestion links_.\n",
                    "type": "integer",
                    "format": "int64",
                    "title": "suggestion",
                    "x-nullable": false
                }
            }
        },
        "CreateCustomFieldsBody": {
            "type": "object",
            "required": [
                "name",
                "key",
                "field_type",
                "object_type"
            ],
            "properties": {
                "field_type": {
                    "description": "boolean: True or False value. Sortable. \n timestamp: datetime value, 2000-01-01T00:00:00Z or 2006-01-02 15:04:05 format. Sortable. \n string: String value; 128 or fewer characters. Sortable. \n text: Text value; 10,000 or fewer characters. Not sortable. \n number: Number value. 15 or fewer digits. All numbers are processed as 64-bit floating-point numbers. Sortable.",
                    "type": "string",
                    "title": "field_type",
                    "enum": [
                        "boolean",
                        "timestamp",
                        "string",
                        "text",
                        "number",
                        "select",
                        "multi_select"
                    ],
                    "x-nullable": false
                },
                "key": {
                    "type": "string",
                    "title": "key",
                    "pattern": "^cf_[0-9A-Za-z_]+",
                    "x-nullable": false
                },
                "name": {
                    "type": "string",
                    "title": "name",
                    "x-nullable": false
                },
                "numeric_enum_values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CreateCustomFieldsBodyNumeric_enum_values"
                    },
                    "x-nullable": true
                },
                "object_type": {
                    "type": "string",
                    "title": "object_type",
                    "enum": [
                        "external_users",
                        "external_accounts",
                        "features",
                        "suggestions"
                    ],
                    "x-nullable": false
                },
                "string_enum_values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CreateCustomFieldsBodyString_enum_values"
                    },
                    "x-nullable": true
                },
                "value_type": {
                    "type": "string",
                    "title": "value_type",
                    "enum": [
                        "numeric_enum",
                        "string_enum",
                        "url",
                        "dollars",
                        "admin",
                        "date"
                    ],
                    "x-nullable": true
                }
            }
        },
        "CreateCustomFieldsBodyNumeric_enum_values": {
            "type": "object",
            "required": [
                "label",
                "numeric_value"
            ],
            "properties": {
                "delete": {
                    "type": "boolean",
                    "title": "delete",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "id",
                    "x-nullable": true
                },
                "is_default": {
                    "type": "boolean",
                    "title": "is_default",
                    "x-nullable": true
                },
                "label": {
                    "type": "string",
                    "title": "label",
                    "maxLength": 32,
                    "x-nullable": false
                },
                "numeric_value": {
                    "type": "number",
                    "format": "double",
                    "title": "numeric_value",
                    "x-nullable": false
                }
            }
        },
        "CreateCustomFieldsBodyString_enum_values": {
            "type": "object",
            "required": [
                "label"
            ],
            "properties": {
                "delete": {
                    "type": "boolean",
                    "title": "delete",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "id",
                    "x-nullable": true
                },
                "is_default": {
                    "type": "boolean",
                    "title": "is_default",
                    "x-nullable": true
                },
                "label": {
                    "type": "string",
                    "title": "label",
                    "maxLength": 32,
                    "x-nullable": false
                }
            }
        },
        "CreateFeaturesBody": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "attachment_tokens": {
                    "type": "array",
                    "title": "attachment_tokens",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "description": {
                    "type": "string",
                    "title": "description",
                    "x-nullable": true
                },
                "feature_status_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "feature_status_id",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "title": "name",
                    "x-nullable": false
                },
                "product_area_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "product_area_id",
                    "x-nullable": true
                },
                "roadmap_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "roadmap_id",
                    "x-nullable": true
                }
            },
            "additionalProperties": true
        },
        "CreateFeedbackRecordsBody": {
            "type": "object",
            "required": [
                "body",
                "channel"
            ],
            "properties": {
                "attachment_tokens": {
                    "type": "array",
                    "title": "attachment_tokens",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "body": {
                    "type": "string",
                    "title": "body",
                    "x-nullable": false
                },
                "body_mime_type": {
                    "type": "string",
                    "title": "body_mime_type",
                    "default": "text/plain",
                    "enum": [
                        "text/html",
                        "text/plain"
                    ],
                    "x-nullable": true
                },
                "channel": {
                    "type": "string",
                    "title": "channel",
                    "default": "api",
                    "enum": [
                        "api",
                        "admin",
                        "contrib_cons",
                        "bookmarklet",
                        "zendesk",
                        "gainsight",
                        "widget",
                        "import",
                        "portal",
                        "nps",
                        "simple-widget",
                        "roadmap",
                        "status_update_reaction",
                        "pendo",
                        "ios",
                        "android",
                        "slack",
                        "unknown"
                    ],
                    "x-nullable": false
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "created_at",
                    "x-nullable": true
                },
                "creator": {
                    "title": "creator",
                    "x-nullable": true,
                    "$ref": "#/definitions/UserRef"
                },
                "links": {
                    "x-nullable": true,
                    "$ref": "#/definitions/CreateFeedbackRecordsBodyLinks"
                },
                "nps_rating": {
                    "type": "integer",
                    "format": "int64",
                    "title": "nps_rating",
                    "x-nullable": true
                },
                "prompt": {
                    "type": "string",
                    "title": "prompt",
                    "x-nullable": true
                },
                "referrer": {
                    "type": "string",
                    "title": "referrer",
                    "x-nullable": true
                },
                "severity": {
                    "type": "integer",
                    "format": "int64",
                    "title": "severity",
                    "x-nullable": true
                },
                "source_guid": {
                    "type": "string",
                    "title": "source_guid",
                    "x-nullable": true
                },
                "source_type": {
                    "type": "string",
                    "title": "source_type",
                    "enum": [
                        "zendesk_ticket",
                        "zendesk_user",
                        "sfdc",
                        "forum",
                        "Feature",
                        "InternalStatusUpdate",
                        "AuditStatus"
                    ],
                    "x-nullable": true
                },
                "source_url": {
                    "type": "string",
                    "title": "source_url",
                    "x-nullable": true
                },
                "subscribe": {
                    "type": "boolean",
                    "title": "subscribe",
                    "x-nullable": true
                }
            }
        },
        "CreateFeedbackRecordsBodyLinks": {
            "type": "object",
            "properties": {
                "outreach": {
                    "type": "integer",
                    "format": "int64",
                    "title": "outreach",
                    "x-nullable": true
                },
                "suggestion": {
                    "type": "integer",
                    "format": "int64",
                    "title": "suggestion",
                    "x-nullable": true
                },
                "support_created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "support_created_at",
                    "x-nullable": true
                },
                "ticket": {
                    "type": "integer",
                    "format": "int64",
                    "title": "ticket",
                    "x-nullable": true
                },
                "user": {
                    "type": "integer",
                    "format": "int64",
                    "title": "user",
                    "x-nullable": true
                },
                "user_email": {
                    "type": "string",
                    "title": "user_email",
                    "x-nullable": true
                }
            }
        },
        "CreateForumInvitationsBody": {
            "type": "object",
            "required": [
                "email",
                "links"
            ],
            "properties": {
                "email": {
                    "type": "array",
                    "title": "email",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": false
                },
                "links": {
                    "x-nullable": false,
                    "$ref": "#/definitions/CreateForumInvitationsBodyLinks"
                },
                "message": {
                    "type": "string",
                    "title": "message",
                    "x-nullable": true
                },
                "reply_to": {
                    "description": "\nThe reply_to email address.",
                    "type": "string",
                    "title": "reply_to",
                    "x-nullable": true
                },
                "subject": {
                    "type": "string",
                    "title": "subject",
                    "x-nullable": true
                }
            }
        },
        "CreateForumInvitationsBodyLinks": {
            "type": "object",
            "required": [
                "forum"
            ],
            "properties": {
                "forum": {
                    "type": "integer",
                    "format": "int64",
                    "title": "forum",
                    "x-nullable": false
                }
            }
        },
        "CreateInternalFlagsBody": {
            "type": "object",
            "required": [
                "reason",
                "suggestion"
            ],
            "properties": {
                "reason": {
                    "type": "string",
                    "title": "reason",
                    "maxLength": 10000,
                    "x-nullable": false
                },
                "suggestion": {
                    "type": "integer",
                    "format": "int64",
                    "title": "suggestion",
                    "x-nullable": false
                },
                "user": {
                    "title": "user",
                    "x-nullable": true,
                    "$ref": "#/definitions/UserRef"
                }
            }
        },
        "CreateInternalStatusUpdatesBody": {
            "type": "object",
            "required": [
                "links"
            ],
            "properties": {
                "attachment_tokens": {
                    "description": "The tokens for attachments to the internal status update.\n",
                    "type": "array",
                    "title": "attachment_tokens",
                    "items": {
                        "type": "string",
                        "example": "example_attachment_token."
                    },
                    "x-nullable": true
                },
                "html_text": {
                    "type": "string",
                    "title": "html_text",
                    "maxLength": 65536,
                    "x-nullable": true
                },
                "links": {
                    "x-nullable": false,
                    "$ref": "#/definitions/CreateInternalStatusUpdatesBodyLinks"
                },
                "notify_supporters": {
                    "type": "boolean",
                    "title": "notify_supporters",
                    "default": false,
                    "x-nullable": true
                },
                "text": {
                    "description": "text will be ignored if html_text is present",
                    "type": "string",
                    "title": "text",
                    "maxLength": 65536,
                    "x-nullable": true
                }
            }
        },
        "CreateInternalStatusUpdatesBodyLinks": {
            "type": "object",
            "required": [
                "suggestion"
            ],
            "properties": {
                "internal_status": {
                    "type": "integer",
                    "format": "int64",
                    "title": "internal_status",
                    "x-nullable": true
                },
                "suggestion": {
                    "type": "integer",
                    "format": "int64",
                    "title": "suggestion",
                    "x-nullable": false
                }
            }
        },
        "CreateLabelsBody": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "links": {
                    "x-nullable": true,
                    "$ref": "#/definitions/CreateLabelsBodyLinks"
                },
                "name": {
                    "type": "string",
                    "title": "name",
                    "maxLength": 128,
                    "x-nullable": false
                }
            }
        },
        "CreateLabelsBodyLinks": {
            "type": "object",
            "properties": {
                "parent": {
                    "type": "integer",
                    "format": "int64",
                    "title": "parent",
                    "x-nullable": true
                }
            }
        },
        "CreateNotesBody": {
            "type": "object",
            "required": [
                "body",
                "links"
            ],
            "properties": {
                "attachment_tokens": {
                    "description": "The tokens for attachments to the note.\n",
                    "type": "array",
                    "title": "attachment_tokens",
                    "items": {
                        "type": "string",
                        "example": "example_attachment_token."
                    },
                    "x-nullable": true
                },
                "body": {
                    "type": "string",
                    "title": "body",
                    "x-nullable": false
                },
                "body_mime_type": {
                    "type": "string",
                    "title": "body_mime_type",
                    "default": "text/plain",
                    "enum": [
                        "text/plain"
                    ],
                    "x-nullable": true
                },
                "links": {
                    "x-nullable": false,
                    "$ref": "#/definitions/CreateNotesBodyLinks"
                }
            }
        },
        "CreateNotesBodyLinks": {
            "type": "object",
            "required": [
                "suggestion"
            ],
            "properties": {
                "suggestion": {
                    "type": "integer",
                    "format": "int64",
                    "title": "suggestion",
                    "x-nullable": false
                }
            }
        },
        "CreateNpsRatingsBody": {
            "type": "object",
            "required": [
                "rating"
            ],
            "properties": {
                "body": {
                    "type": "string",
                    "title": "body",
                    "x-nullable": true
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "title": "date",
                    "x-nullable": true
                },
                "forum": {
                    "type": "integer",
                    "format": "int64",
                    "title": "forum",
                    "x-nullable": true
                },
                "prompt": {
                    "type": "string",
                    "title": "prompt",
                    "x-nullable": true
                },
                "rating": {
                    "type": "integer",
                    "format": "int64",
                    "title": "rating",
                    "maximum": 10,
                    "minimum": 0,
                    "x-nullable": false
                },
                "user": {
                    "description": "Must include either `email` or `id`.",
                    "title": "user",
                    "x-nullable": true,
                    "$ref": "#/definitions/UserRef"
                }
            }
        },
        "CreatePermissionsBody": {
            "type": "object",
            "required": [
                "license_type",
                "email"
            ],
            "properties": {
                "email": {
                    "type": "array",
                    "title": "email",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": false
                },
                "features": {
                    "type": "string",
                    "title": "features",
                    "default": "none",
                    "enum": [
                        "none",
                        "view",
                        "manage"
                    ],
                    "x-nullable": true
                },
                "feedback": {
                    "type": "string",
                    "title": "feedback",
                    "default": "contribute",
                    "enum": [
                        "none",
                        "view",
                        "contribute",
                        "manage"
                    ],
                    "x-nullable": true
                },
                "knowledgebase": {
                    "type": "string",
                    "title": "knowledgebase",
                    "default": "none",
                    "enum": [
                        "none",
                        "view",
                        "manage"
                    ],
                    "x-nullable": true
                },
                "license_type": {
                    "type": "string",
                    "title": "license_type",
                    "enum": [
                        "fullaccess_admin",
                        "admin",
                        "contributor",
                        "helpdesk_admin"
                    ],
                    "x-nullable": false
                },
                "reply_to": {
                    "type": "string",
                    "title": "reply_to",
                    "x-nullable": true
                },
                "settings": {
                    "type": "string",
                    "title": "settings",
                    "default": "none",
                    "enum": [
                        "none",
                        "manage",
                        "manage_account"
                    ],
                    "x-nullable": true
                },
                "tickets": {
                    "type": "string",
                    "title": "tickets",
                    "default": "none",
                    "enum": [
                        "none",
                        "view",
                        "manage"
                    ],
                    "x-nullable": true
                }
            }
        },
        "CreateStatusUpdatesBody": {
            "type": "object",
            "required": [
                "links"
            ],
            "properties": {
                "attachment_tokens": {
                    "description": "The tokens for attachments to the status update.\n",
                    "type": "array",
                    "title": "attachment_tokens",
                    "items": {
                        "type": "string",
                        "example": "example_attachment_token."
                    },
                    "x-nullable": true
                },
                "body": {
                    "description": "body will be ignored if html_body is present",
                    "type": "string",
                    "title": "body",
                    "maxLength": 10000,
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "created_at",
                    "x-nullable": true
                },
                "created_by_email": {
                    "type": "string",
                    "title": "created_by_email",
                    "x-nullable": true
                },
                "from_email": {
                    "type": "string",
                    "title": "from_email",
                    "x-nullable": true
                },
                "html_body": {
                    "type": "string",
                    "title": "html_body",
                    "maxLength": 65536,
                    "x-nullable": true
                },
                "links": {
                    "x-nullable": false,
                    "$ref": "#/definitions/CreateStatusUpdatesBodyLinks"
                },
                "notification_email_address": {
                    "type": "string",
                    "title": "notification_email_address",
                    "x-nullable": true
                },
                "notify_supporters": {
                    "type": "boolean",
                    "title": "notify_supporters",
                    "default": false,
                    "x-nullable": true
                }
            }
        },
        "CreateStatusUpdatesBodyLinks": {
            "type": "object",
            "required": [
                "suggestion"
            ],
            "properties": {
                "status": {
                    "type": "integer",
                    "format": "int64",
                    "title": "status",
                    "x-nullable": true
                },
                "suggestion": {
                    "type": "integer",
                    "format": "int64",
                    "title": "suggestion",
                    "x-nullable": false
                }
            }
        },
        "CreateSuggestionsBody": {
            "type": "object",
            "required": [
                "title",
                "links"
            ],
            "properties": {
                "attachment_tokens": {
                    "description": "\nUpload the attachment using the Attachments endpoint first, then use the token found in the response to attach it here.\n",
                    "type": "array",
                    "title": "attachment_tokens",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "body": {
                    "type": "string",
                    "title": "body",
                    "maxLength": 10000,
                    "x-nullable": true
                },
                "body_mime_type": {
                    "type": "string",
                    "title": "body_mime_type",
                    "default": "text/plain",
                    "enum": [
                        "text/plain"
                    ],
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "created_at",
                    "x-nullable": true
                },
                "links": {
                    "x-nullable": false,
                    "$ref": "#/definitions/CreateSuggestionsBodyLinks"
                },
                "referrer": {
                    "description": "\nCurrent URL/URI of the end user.\n",
                    "type": "string",
                    "title": "referrer",
                    "x-nullable": true
                },
                "subscribe_creator": {
                    "type": "boolean",
                    "title": "subscribe_creator",
                    "default": false,
                    "x-nullable": true
                },
                "title": {
                    "type": "string",
                    "title": "title",
                    "maxLength": 140,
                    "x-nullable": false
                },
                "user_agent": {
                    "description": "\nTypically `navigator.userAgent` when collected from the browser. Identifies device information.\n",
                    "type": "string",
                    "title": "user_agent",
                    "x-nullable": true
                },
                "voter": {
                    "title": "voter",
                    "x-nullable": true,
                    "$ref": "#/definitions/UserRef"
                }
            },
            "additionalProperties": true
        },
        "CreateSuggestionsBodyLinks": {
            "type": "object",
            "required": [
                "forum"
            ],
            "properties": {
                "category": {
                    "type": "integer",
                    "format": "int64",
                    "title": "category",
                    "x-nullable": true
                },
                "forum": {
                    "type": "integer",
                    "format": "int64",
                    "title": "forum",
                    "x-nullable": false
                },
                "status": {
                    "type": "integer",
                    "format": "int64",
                    "title": "status",
                    "x-nullable": true
                }
            }
        },
        "CreateSupporterMessagesBody": {
            "type": "object",
            "required": [
                "body",
                "links"
            ],
            "properties": {
                "attachment_tokens": {
                    "description": "The tokens for attachments to the internal status update.\n",
                    "type": "array",
                    "title": "attachment_tokens",
                    "items": {
                        "type": "string",
                        "example": "example_attachment_token."
                    },
                    "x-nullable": true
                },
                "body": {
                    "type": "string",
                    "title": "body",
                    "x-nullable": false
                },
                "email_subject": {
                    "type": "string",
                    "title": "email_subject",
                    "x-nullable": true
                },
                "from_email": {
                    "type": "string",
                    "title": "from_email",
                    "x-nullable": true
                },
                "links": {
                    "x-nullable": false,
                    "$ref": "#/definitions/CreateSupporterMessagesBodyLinks"
                },
                "notification_email_address": {
                    "type": "string",
                    "title": "notification_email_address",
                    "x-nullable": true
                }
            }
        },
        "CreateSupporterMessagesBodyLinks": {
            "type": "object",
            "required": [
                "suggestion"
            ],
            "properties": {
                "suggestion": {
                    "type": "integer",
                    "format": "int64",
                    "title": "suggestion",
                    "x-nullable": false
                }
            }
        },
        "CreateTeamsBody": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "title": "name",
                    "maxLength": 128,
                    "x-nullable": false
                }
            }
        },
        "CreateViewsBody": {
            "type": "object",
            "required": [
                "kind"
            ],
            "properties": {
                "kind": {
                    "type": "string",
                    "title": "kind",
                    "enum": [
                        "suggestions"
                    ],
                    "x-nullable": false
                },
                "links": {
                    "x-nullable": true,
                    "$ref": "#/definitions/CreateViewsBodyLinks"
                },
                "name": {
                    "type": "string",
                    "title": "name",
                    "x-nullable": true
                },
                "params": {
                    "type": "string",
                    "title": "params",
                    "x-nullable": true
                },
                "sub_kind": {
                    "type": "string",
                    "title": "sub_kind",
                    "enum": [
                        "suggestion_activity_entries"
                    ],
                    "x-nullable": true
                },
                "subscribed": {
                    "type": "boolean",
                    "title": "subscribed",
                    "default": false,
                    "x-nullable": true
                },
                "subscription_params": {
                    "type": "string",
                    "title": "subscription_params",
                    "x-nullable": true
                }
            }
        },
        "CreateViewsBodyLinks": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "integer",
                    "format": "int64",
                    "title": "user",
                    "x-nullable": true
                }
            }
        },
        "CustomField": {
            "type": "object",
            "properties": {
                "combined_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "field_type": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "key": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "created_by": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "updated_by": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "numeric_enum_values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NumericEnumValue"
                    },
                    "x-nullable": true
                },
                "object_type": {
                    "type": "string"
                },
                "string_enum_values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StringEnumValue"
                    },
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "value_type": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "DeleteTranslatableStringsBody": {
            "type": "object",
            "required": [
                "locale"
            ],
            "properties": {
                "locale": {
                    "type": "string",
                    "title": "locale",
                    "x-nullable": false
                }
            }
        },
        "DetachLabelsBody": {
            "type": "object",
            "required": [
                "links"
            ],
            "properties": {
                "links": {
                    "x-nullable": false,
                    "$ref": "#/definitions/DetachLabelsBodyLinks"
                }
            }
        },
        "DetachLabelsBodyLinks": {
            "type": "object",
            "required": [
                "label",
                "suggestion"
            ],
            "properties": {
                "label": {
                    "type": "integer",
                    "format": "int64",
                    "title": "label",
                    "x-nullable": false
                },
                "suggestion": {
                    "type": "integer",
                    "format": "int64",
                    "title": "suggestion",
                    "x-nullable": false
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "object",
                    "properties": {
                        "error": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "ExportUsersBody": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Include a custom message in the export email",
                    "type": "string",
                    "title": "message",
                    "x-nullable": true
                }
            }
        },
        "ExternalAccount": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "external_created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "external_id": {
                    "type": "string",
                    "x-nullable": true
                },
                "has_internal_flag": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "importance_score_average": {
                    "type": "string"
                },
                "importance_score_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "last_active_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "gs_company": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "ltv": {
                    "type": "number",
                    "format": "double",
                    "x-nullable": true
                },
                "ltv_cents": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "mrr": {
                    "type": "number",
                    "format": "double",
                    "x-nullable": true
                },
                "mrr_cents": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "nps": {
                    "type": "number",
                    "format": "double",
                    "x-nullable": true
                },
                "plan": {
                    "type": "string",
                    "x-nullable": true
                },
                "requests_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "revenue": {
                    "type": "number",
                    "format": "double",
                    "x-nullable": true
                },
                "supported_ideas_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "users_count": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ExternalProperties": {
            "type": "object",
            "properties": {
                "account_created_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "account_id": {
                    "type": "string",
                    "x-nullable": true
                },
                "account_internal_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "account_name": {
                    "type": "string",
                    "x-nullable": true
                },
                "created_at": {
                    "type": "integer",
                    "format": "int64"
                },
                "email": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "ExternalTraits": {
            "type": "object",
            "properties": {
                "account_ltv": {
                    "type": "number",
                    "format": "double",
                    "x-nullable": true
                },
                "account_monthly_rate": {
                    "type": "number",
                    "format": "double",
                    "x-nullable": true
                },
                "account_plan": {
                    "type": "string",
                    "x-nullable": true
                },
                "browser_name": {
                    "type": "string",
                    "x-nullable": true
                },
                "ip": {
                    "type": "string",
                    "x-nullable": true
                },
                "location_city": {
                    "type": "string",
                    "x-nullable": true
                },
                "location_country": {
                    "type": "string",
                    "x-nullable": true
                },
                "location_region": {
                    "type": "string",
                    "x-nullable": true
                },
                "os_name": {
                    "type": "string",
                    "x-nullable": true
                },
                "type": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "ExternalUser": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "email": {
                    "type": "string"
                },
                "external_created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "external_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ip": {
                    "type": "string",
                    "x-nullable": true
                },
                "last_seen_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "external_account": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "user": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "seen_days": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "Feature": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "description": {
                    "type": "string",
                    "x-nullable": true
                },
                "has_internal_flag": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "jira_link_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "jira_status_last_updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "created_by": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "feature_status": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "jira_issues": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "x-nullable": true
                        },
                        "product_area": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "suggestions": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "x-nullable": true
                        },
                        "updated_by": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "vsts_work_items": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "x-nullable": true
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer",
                    "format": "int64"
                },
                "reaction_analysis": {
                    "x-nullable": true,
                    "$ref": "#/definitions/ReactionAnalysis"
                },
                "suggestions_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "supporter_mrr_cents": {
                    "type": "integer",
                    "format": "int64"
                },
                "supporter_revenue": {
                    "type": "number",
                    "format": "double"
                },
                "supporting_accounts_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "supporting_users_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "vsts_link_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "vsts_state_last_updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "FeatureStatus": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "hex_color": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_default": {
                    "type": "boolean"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "created_by": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "updated_by": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "FeedbackRecord": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "body_mime_type": {
                    "type": "string"
                },
                "channel": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "has_attachments": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "created_by": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "features": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "x-nullable": true
                        },
                        "forum": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "internal_status": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "reaction": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "suggestion": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "suggestions": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "x-nullable": true
                        },
                        "supporter": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "supporters": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "x-nullable": true
                        },
                        "updated_by": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "user": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                },
                "nps_rating": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "prompt": {
                    "type": "string",
                    "x-nullable": true
                },
                "referrer": {
                    "type": "string",
                    "x-nullable": true
                },
                "severity": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "source_guid": {
                    "type": "string",
                    "x-nullable": true
                },
                "source_type": {
                    "type": "string",
                    "x-nullable": true
                },
                "source_url": {
                    "type": "string",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "FindOrCreateUsersBody": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "title": "email",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "title": "name",
                    "x-nullable": true
                }
            }
        },
        "Forum": {
            "type": "object",
            "properties": {
                "category_required": {
                    "type": "boolean"
                },
                "classic_voting": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_open": {
                    "type": "boolean"
                },
                "is_private": {
                    "type": "boolean"
                },
                "is_public": {
                    "type": "boolean"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "updated_by": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "open_suggestions_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "placeholder": {
                    "type": "string",
                    "x-nullable": true
                },
                "portal_url": {
                    "type": "string"
                },
                "prompt": {
                    "type": "string",
                    "x-nullable": true
                },
                "suggestions_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "welcome_message": {
                    "type": "string",
                    "x-nullable": true
                },
                "welcome_message_mime_type": {
                    "type": "string"
                }
            }
        },
        "ForumInvitation": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "avatar_url": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "claimed_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "claimed_by": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "forum": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "invited_by": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "reply_to": {
                    "type": "string",
                    "x-nullable": true
                },
                "return_to": {
                    "type": "string"
                },
                "satisfaction_score": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "subject": {
                    "type": "string",
                    "x-nullable": true
                },
                "text": {
                    "type": "string",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "FullstoryUserSession": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "fs_created_time": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "fs_session_id": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "fs_url": {
                    "type": "string"
                },
                "fs_user_id": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "$ref": "#/definitions/FullstoryUserSessionLinks"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "FullstoryUserSessionLinks": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "suggestion": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "user": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                }
            }
        },
        "GsCompany": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "gsid": {
                    "type": "string"
                },
                "health_score": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "external_account": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "mapping_id": {
                    "type": "string",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "renewal_date": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "stage": {
                    "type": "string",
                    "x-nullable": true
                },
                "status": {
                    "type": "string",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "ImportExternalAccountsBody": {
            "type": "object",
            "required": [
                "accounts"
            ],
            "properties": {
                "accounts": {
                    "description": "An array of details about the external accounts.\n",
                    "type": "array",
                    "maxItems": 1000,
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/ImportExternalAccountsBodyAccounts"
                    },
                    "x-nullable": false
                }
            }
        },
        "ImportExternalAccountsBodyAccounts": {
            "type": "object",
            "required": [
                "external_id"
            ],
            "properties": {
                "external_created_at": {
                    "description": "Date account was created in your system. Expected format: 2017-01-01T01:00:00Z",
                    "type": "string",
                    "format": "date-time",
                    "title": "external_created_at",
                    "x-nullable": true
                },
                "external_id": {
                    "description": "Account ID in your system.",
                    "type": "string",
                    "title": "external_id",
                    "maxLength": 255,
                    "x-nullable": false
                },
                "name": {
                    "description": "Account name in your system. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "name",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "plan": {
                    "description": "Plan name of account. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "plan",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "revenue": {
                    "description": "The revenue you receive from the account.\n",
                    "type": "number",
                    "format": "double",
                    "title": "revenue",
                    "maximum": 999999999999999,
                    "x-nullable": true,
                    "example": 89034.3
                }
            },
            "additionalProperties": true
        },
        "ImportExternalUsersBody": {
            "type": "object",
            "required": [
                "users"
            ],
            "properties": {
                "users": {
                    "type": "array",
                    "maxItems": 1000,
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/ImportExternalUsersBodyUsers"
                    },
                    "x-nullable": false
                }
            }
        },
        "ImportExternalUsersBodyUsers": {
            "type": "object",
            "required": [
                "external_id"
            ],
            "properties": {
                "account": {
                    "x-nullable": true,
                    "$ref": "#/definitions/ImportExternalUsersBodyUsersAccount"
                },
                "email": {
                    "description": "Primary way we link the external user to the user's UV profile. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "email",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "external_created_at": {
                    "description": "Date user was created in your system. Expected format: 2017-01-01T01:00:00Z",
                    "type": "string",
                    "format": "date-time",
                    "title": "external_created_at",
                    "x-nullable": true
                },
                "external_id": {
                    "description": "User ID in your system. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "external_id",
                    "maxLength": 255,
                    "x-nullable": false
                },
                "ip": {
                    "description": "Defaults to IP address as determined by UserVoice. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "ip",
                    "x-nullable": true
                },
                "name": {
                    "description": "Name of the user. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "name",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "type": {
                    "description": "Type for the user, e.g. 'admin' or 'owner'. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "type",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "user_id": {
                    "description": "User's ID in UserVoice. If you pass a UV ID, we will use it to link to an existing UV Profile rather than email.",
                    "type": "integer",
                    "format": "int64",
                    "title": "user_id",
                    "x-nullable": true
                }
            },
            "additionalProperties": true
        },
        "ImportExternalUsersBodyUsersAccount": {
            "type": "object",
            "required": [
                "external_id"
            ],
            "properties": {
                "external_created_at": {
                    "description": "Date account was created in your system. Expected format: 2017-01-01T01:00:00Z",
                    "type": "string",
                    "format": "date-time",
                    "title": "external_created_at",
                    "x-nullable": true
                },
                "external_id": {
                    "description": "Account ID in your system.",
                    "type": "string",
                    "title": "external_id",
                    "maxLength": 255,
                    "x-nullable": false
                },
                "name": {
                    "description": "Account name in your system. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "name",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "plan": {
                    "description": "Plan name of account. Recommended length: 128 or fewer characters.",
                    "type": "string",
                    "title": "plan",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "revenue": {
                    "type": "number",
                    "format": "double",
                    "title": "revenue",
                    "maximum": 999999999999999,
                    "x-nullable": true
                }
            },
            "additionalProperties": true
        },
        "ImportSuggestionsBody": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "attachment_tokens": {
                    "description": "\nUpload the attachment using the Attachments endpoint first, then use the token found in the response to attach it here.\n",
                    "type": "array",
                    "title": "attachment_tokens",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "body": {
                    "type": "string",
                    "title": "body",
                    "maxLength": 10000,
                    "x-nullable": true
                },
                "body_mime_type": {
                    "type": "string",
                    "title": "body_mime_type",
                    "default": "text/plain",
                    "enum": [
                        "text/plain"
                    ],
                    "x-nullable": true
                },
                "category_name": {
                    "type": "string",
                    "title": "category_name",
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "created_at",
                    "x-nullable": true
                },
                "forum_name": {
                    "type": "string",
                    "title": "forum_name",
                    "x-nullable": true
                },
                "internal_status_name": {
                    "type": "string",
                    "title": "internal_status_name",
                    "x-nullable": true
                },
                "links": {
                    "x-nullable": true,
                    "$ref": "#/definitions/ImportSuggestionsBodyLinks"
                },
                "referrer": {
                    "description": "\nCurrent URL/URI of the end user.\n",
                    "type": "string",
                    "title": "referrer",
                    "maxLength": 1024,
                    "x-nullable": true
                },
                "send_autoreply_email": {
                    "type": "boolean",
                    "title": "send_autoreply_email",
                    "x-nullable": true
                },
                "state": {
                    "type": "string",
                    "title": "state",
                    "default": "published",
                    "enum": [
                        "new",
                        "approved",
                        "published"
                    ],
                    "x-nullable": true
                },
                "status_name": {
                    "type": "string",
                    "title": "status_name",
                    "x-nullable": true
                },
                "status_update_body": {
                    "type": "string",
                    "title": "status_update_body",
                    "maxLength": 10000,
                    "x-nullable": true
                },
                "status_update_created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "status_update_created_at",
                    "x-nullable": true
                },
                "status_update_created_by_email": {
                    "type": "string",
                    "title": "status_update_created_by_email",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "status_update_html_body": {
                    "type": "string",
                    "title": "status_update_html_body",
                    "maxLength": 10000,
                    "x-nullable": true
                },
                "title": {
                    "type": "string",
                    "title": "title",
                    "maxLength": 140,
                    "x-nullable": false
                },
                "user_agent": {
                    "description": "\nTypically `navigator.userAgent` when collected from the browser. Identifies device information.",
                    "type": "string",
                    "title": "user_agent",
                    "maxLength": 1024,
                    "x-nullable": true
                },
                "user_email": {
                    "type": "string",
                    "title": "user_email",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "user_name": {
                    "type": "string",
                    "title": "user_name",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "user_subscribed": {
                    "type": "boolean",
                    "title": "user_subscribed",
                    "x-nullable": true
                }
            },
            "additionalProperties": true
        },
        "ImportSuggestionsBodyLinks": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "integer",
                    "format": "int64",
                    "title": "category",
                    "x-nullable": true
                },
                "forum": {
                    "type": "integer",
                    "format": "int64",
                    "title": "forum",
                    "x-nullable": true
                },
                "internal_status": {
                    "type": "integer",
                    "format": "int64",
                    "title": "internal_status",
                    "x-nullable": true
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64",
                        "title": "labels"
                    },
                    "x-nullable": true
                },
                "status": {
                    "type": "integer",
                    "format": "int64",
                    "title": "status",
                    "x-nullable": true
                },
                "user": {
                    "type": "integer",
                    "format": "int64",
                    "title": "user",
                    "x-nullable": true
                }
            }
        },
        "ImportanceResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "label": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "user": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "value": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "InternalFlag": {
            "type": "object",
            "properties": {
                "cleared_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "cleared_message": {
                    "type": "string",
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "$ref": "#/definitions/InternalFlagLinks"
                },
                "reason": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "InternalFlagLinks": {
            "type": "object",
            "properties": {
                "cleared_by": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "created_by": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "suggestion": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "user": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                }
            }
        },
        "InternalStatus": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "hex_color": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "InternalStatusUpdate": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "expected_send_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "hex_color": {
                    "type": "string",
                    "x-nullable": true
                },
                "html_text": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "internal_status_id": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "created_by": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "new_internal_status": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "old_internal_status": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "suggestion": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "mail_clicked_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "mail_opened_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "mail_sent_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "teams_notified": {
                    "type": "boolean"
                },
                "text": {
                    "type": "string",
                    "x-nullable": true
                },
                "thumbs_down_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "thumbs_up_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                }
            }
        },
        "JiraIssue": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "issue_url": {
                    "type": "string"
                },
                "issuetype": {
                    "type": "string"
                },
                "issuetype_icon_url": {
                    "type": "string",
                    "x-nullable": true
                },
                "jira_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "jira_key": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "created_by": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                },
                "status": {
                    "type": "string"
                },
                "status_color": {
                    "type": "string"
                },
                "status_last_updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "summary": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Label": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "level": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "parent": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "open_suggestions_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "LinkFeedbackRecordsBody": {
            "type": "object",
            "required": [
                "suggestion"
            ],
            "properties": {
                "suggestion": {
                    "type": "integer",
                    "format": "int64",
                    "title": "suggestion",
                    "x-nullable": false
                }
            }
        },
        "LinkJiraIssueSuggestionsBody": {
            "type": "object",
            "required": [
                "jira_key"
            ],
            "properties": {
                "jira_key": {
                    "description": "Jira Issue key",
                    "type": "string",
                    "title": "jira_key",
                    "x-nullable": false
                }
            }
        },
        "LinkToFeatureSuggestionsBody": {
            "type": "object",
            "required": [
                "links"
            ],
            "properties": {
                "links": {
                    "x-nullable": false,
                    "$ref": "#/definitions/LinkToFeatureSuggestionsBodyLinks"
                }
            }
        },
        "LinkToFeatureSuggestionsBodyLinks": {
            "type": "object",
            "required": [
                "feature",
                "suggestion"
            ],
            "properties": {
                "feature": {
                    "type": "array",
                    "title": "feature",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": false
                },
                "suggestion": {
                    "type": "array",
                    "title": "suggestion",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": false
                }
            }
        },
        "LinkVstsSuggestionsBody": {
            "type": "object",
            "required": [
                "id",
                "work_item"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "id",
                    "x-nullable": false
                },
                "work_item": {
                    "description": "Can be a work item ID or URL",
                    "type": "string",
                    "title": "work_item",
                    "x-nullable": false
                }
            }
        },
        "MapResponse": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "x-nullable": true
        },
        "MergeSuggestionsBody": {
            "type": "object",
            "properties": {
                "links": {
                    "x-nullable": true,
                    "$ref": "#/definitions/MergeSuggestionsBodyLinks"
                },
                "notify_supporters": {
                    "description": "\nSet to `true` to notify the supporters of the merge.\n",
                    "type": "boolean",
                    "title": "notify_supporters",
                    "x-nullable": true
                },
                "reply_to": {
                    "description": "\nThe reply-to email address.",
                    "type": "string",
                    "title": "reply_to",
                    "x-nullable": true
                }
            }
        },
        "MergeSuggestionsBodyLinks": {
            "type": "object",
            "required": [
                "from_suggestion",
                "to_suggestion"
            ],
            "properties": {
                "from_suggestion": {
                    "type": "integer",
                    "format": "int64",
                    "title": "from_suggestion",
                    "x-nullable": false
                },
                "to_suggestion": {
                    "type": "integer",
                    "format": "int64",
                    "title": "to_suggestion",
                    "x-nullable": false
                }
            }
        },
        "NPSRating": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string",
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "$ref": "#/definitions/NPSRatingLinks"
                },
                "previous_rating": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "prompt": {
                    "type": "string",
                    "x-nullable": true
                },
                "rating": {
                    "type": "integer",
                    "format": "int64"
                },
                "rating_delta": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "NPSRatingLinks": {
            "type": "object",
            "properties": {
                "forums": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": true
                },
                "user": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Note": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "body_mime_type": {
                    "type": "string"
                },
                "comm_metadata": {
                    "x-nullable": true,
                    "$ref": "#/definitions/CommMetadata"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "created_by": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "mentions": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "x-nullable": true
                        },
                        "suggestion": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "NumericEnumValue": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/StringEnumValue"
                }
            ],
            "properties": {
                "numeric_value": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "OauthToken": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "Outreach": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "deactivated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "expected_sent_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "category": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "forum": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "suggestion": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "user": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                },
                "mail_clicked_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "mail_expected_send_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "mail_opened_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "mail_sent_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "parent_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "parent_type": {
                    "type": "string"
                },
                "prompt": {
                    "type": "string"
                },
                "response_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Permission": {
            "type": "object",
            "properties": {
                "features": {
                    "type": "string"
                },
                "feedback": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "knowledgebase": {
                    "type": "string"
                },
                "license_type": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "user": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                },
                "settings": {
                    "type": "string"
                },
                "tickets": {
                    "type": "string"
                }
            }
        },
        "ProductArea": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "created_by": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "updated_by": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "RateLimitErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "Reaction": {
            "type": "object",
            "properties": {
                "comm_metadata": {
                    "x-nullable": true,
                    "$ref": "#/definitions/CommMetadata"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "feature": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "feedback_record": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "internal_status_update": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "public_status_update": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "user": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                },
                "prompt": {
                    "type": "string",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "value": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "ReactionAnalysis": {
            "type": "object",
            "properties": {
                "thumbs_down_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "thumbs_up_count": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "RejectSuggestedMergesBody": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string",
                    "title": "reason",
                    "maxLength": 255,
                    "x-nullable": true
                }
            }
        },
        "Segment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "filters": {
                    "x-nullable": true,
                    "$ref": "#/definitions/BuilderExpression"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "key": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "created_by": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "updated_by": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "SegmentedValue": {
            "type": "object",
            "properties": {
                "column_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "key": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/SegmentedValueLinks"
                },
                "name": {
                    "type": "string"
                },
                "object_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "SegmentedValueLinks": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "integer",
                    "format": "int64"
                },
                "segment": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_by": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ShareViewsBody": {
            "type": "object",
            "properties": {
                "is_public": {
                    "type": "boolean",
                    "title": "is_public",
                    "default": false,
                    "x-nullable": true
                },
                "user_ids": {
                    "type": "array",
                    "title": "user_ids",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": true
                }
            }
        },
        "Status": {
            "type": "object",
            "properties": {
                "allow_comments": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "hex_color": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_open": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "StatusUpdate": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string",
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "expected_send_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "from_email": {
                    "type": "string",
                    "x-nullable": true
                },
                "html_body": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "new_status": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "old_status": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "suggestion": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "user": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "mail_clicked_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "mail_opened_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "mail_sent_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "notification_email_address": {
                    "type": "string",
                    "x-nullable": true
                },
                "reactions_enabled": {
                    "type": "boolean"
                },
                "supporters_notified": {
                    "type": "boolean"
                },
                "thumbs_down_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "thumbs_up_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "StringEnumValue": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_default": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "Subdomain": {
            "type": "object",
            "properties": {
                "allow_feedback_product_areas": {
                    "type": "boolean"
                },
                "cname": {
                    "type": "string",
                    "x-nullable": true
                },
                "deleted_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "key": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "default_forum": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "require_suggestion_on_capture_feedback": {
                    "type": "string"
                },
                "severity_tracking_enabled": {
                    "type": "boolean"
                }
            }
        },
        "SubscribeSuggestionsBody": {
            "type": "object",
            "required": [
                "user"
            ],
            "properties": {
                "channel": {
                    "type": "string",
                    "title": "channel",
                    "default": "api",
                    "x-nullable": true
                },
                "user": {
                    "description": "\nEither `id` or `email` and `name` is required.",
                    "title": "user",
                    "x-nullable": false,
                    "$ref": "#/definitions/UserRef"
                }
            }
        },
        "SuggestedMerge": {
            "type": "object",
            "properties": {
                "acknowledged_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "$ref": "#/definitions/SuggestedMergeLinks"
                },
                "rejection_reason": {
                    "type": "string",
                    "x-nullable": true
                },
                "score": {
                    "type": "number",
                    "format": "double"
                },
                "state": {
                    "type": "string"
                },
                "subdomain_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "SuggestedMergeLinks": {
            "type": "object",
            "properties": {
                "acknowledged_by": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "suggestion_a": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "suggestion_b": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                }
            }
        },
        "Suggestion": {
            "type": "object",
            "properties": {
                "account_supporters_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "activity_analysis": {
                    "x-nullable": true,
                    "$ref": "#/definitions/ActivityAnalysis"
                },
                "admin_url": {
                    "type": "string"
                },
                "all_internal_flags_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "average_engagement": {
                    "type": "number",
                    "format": "double"
                },
                "body": {
                    "type": "string",
                    "x-nullable": true
                },
                "body_mime_type": {
                    "type": "string"
                },
                "channel": {
                    "type": "string",
                    "x-nullable": true
                },
                "closed_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "comm_metadata": {
                    "x-nullable": true,
                    "$ref": "#/definitions/CommMetadata"
                },
                "comments_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "creator_browser": {
                    "type": "string",
                    "x-nullable": true
                },
                "creator_browser_version": {
                    "type": "string",
                    "x-nullable": true
                },
                "creator_mobile": {
                    "type": "boolean"
                },
                "creator_os": {
                    "type": "string",
                    "x-nullable": true
                },
                "creator_referrer": {
                    "type": "string",
                    "x-nullable": true
                },
                "creator_user_agent": {
                    "type": "string",
                    "x-nullable": true
                },
                "engagement_trend": {
                    "type": "number",
                    "format": "double"
                },
                "first_support_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "has_internal_flag": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "importance_score_average": {
                    "type": "string"
                },
                "inappropriate_flags_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "internal_flags_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "jira_link_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "jira_status_last_updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "last_internal_flag_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "last_support_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "links": {
                    "$ref": "#/definitions/SuggestionLinks"
                },
                "merge_candidates_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "notes_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "portal_url": {
                    "type": "string"
                },
                "recent_engagement": {
                    "type": "integer",
                    "format": "int64"
                },
                "redirect_url": {
                    "type": "string"
                },
                "requests_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "satisfaction_detractor_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "satisfaction_neutral_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "satisfaction_promoter_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "state": {
                    "type": "string"
                },
                "supporter_mrr": {
                    "type": "number",
                    "format": "double"
                },
                "supporter_revenue": {
                    "type": "number",
                    "format": "double"
                },
                "supporter_satisfaction_score": {
                    "type": "number",
                    "format": "double"
                },
                "supporters_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "supporting_accounts_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "title": {
                    "type": "string",
                    "x-nullable": true
                },
                "unmergeable": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "vsts_link_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "vsts_state_last_updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "SuggestionActivityEntry": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "kind": {
                    "type": "string",
                    "x-nullable": true
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "comment": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "created_by": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "feedback_record": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "internal_flag": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "internal_status_update": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "merged_from_suggestion": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "merged_to_suggestion": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "new_category": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "new_forum": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "new_owner": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "note": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "old_category": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "old_forum": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "old_owner": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "outreach": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "status_update": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "suggestion": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "supporter_message": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "ticket": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "new_body": {
                    "type": "string",
                    "x-nullable": true
                },
                "new_state": {
                    "type": "string",
                    "x-nullable": true
                },
                "new_title": {
                    "type": "string",
                    "x-nullable": true
                },
                "old_body": {
                    "type": "string",
                    "x-nullable": true
                },
                "old_state": {
                    "type": "string",
                    "x-nullable": true
                },
                "old_title": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "SuggestionLinks": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "created_by": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": true
                },
                "forum": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "fullstory_user_session": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "jira_issues": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": true
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": true
                },
                "last_status_update": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "last_supporter_message": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "owned_by": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "parent_suggestion": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "parent_suggestions": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": true
                },
                "status": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "ticket": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "vsts_work_items": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": true
                }
            }
        },
        "Supporter": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "string"
                },
                "comments_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "how": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "importance_score": {
                    "type": "string"
                },
                "is_subscribed": {
                    "type": "boolean"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "created_by": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "suggestion": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "updated_by": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "user": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                },
                "requests_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "SupporterMessage": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "body_mime_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "email_subject": {
                    "type": "string",
                    "x-nullable": true
                },
                "from_email": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "created_by": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "suggestion": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                },
                "mail_clicked_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "mail_opened_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "mail_sent_count": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "notification_email_address": {
                    "type": "string",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "Team": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "members_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Ticket": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "string",
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "assignee": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "contact": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "created_by": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "state": {
                    "type": "string",
                    "x-nullable": true
                },
                "subject": {
                    "type": "string",
                    "x-nullable": true
                },
                "ticket_number": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                }
            }
        },
        "UnassignTeamsBody": {
            "type": "object",
            "required": [
                "links"
            ],
            "properties": {
                "links": {
                    "x-nullable": false,
                    "$ref": "#/definitions/UnassignTeamsBodyLinks"
                }
            }
        },
        "UnassignTeamsBodyLinks": {
            "type": "object",
            "required": [
                "team",
                "user"
            ],
            "properties": {
                "team": {
                    "type": "array",
                    "title": "team",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": false
                },
                "user": {
                    "type": "array",
                    "title": "user",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": false
                }
            }
        },
        "UnlinkFromFeatureSuggestionsBody": {
            "type": "object",
            "required": [
                "links"
            ],
            "properties": {
                "links": {
                    "x-nullable": false,
                    "$ref": "#/definitions/UnlinkFromFeatureSuggestionsBodyLinks"
                }
            }
        },
        "UnlinkFromFeatureSuggestionsBodyLinks": {
            "type": "object",
            "required": [
                "feature",
                "suggestion"
            ],
            "properties": {
                "feature": {
                    "type": "array",
                    "title": "feature",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": false
                },
                "suggestion": {
                    "type": "array",
                    "title": "suggestion",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-nullable": false
                }
            }
        },
        "UnsubscribeSuggestionsBody": {
            "type": "object",
            "required": [
                "user"
            ],
            "properties": {
                "remove_vote": {
                    "type": "boolean",
                    "title": "remove_vote",
                    "x-nullable": true
                },
                "user": {
                    "description": "\nEither `id` or `email` and `name` is required.",
                    "title": "user",
                    "x-nullable": false,
                    "$ref": "#/definitions/UserRef"
                }
            }
        },
        "UpdateCategoriesBody": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "title": "name",
                    "x-nullable": false
                }
            }
        },
        "UpdateCommentsBody": {
            "type": "object",
            "required": [
                "body"
            ],
            "properties": {
                "body": {
                    "type": "string",
                    "title": "body",
                    "x-nullable": false
                }
            }
        },
        "UpdateCustomFieldsBody": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "title": "key",
                    "pattern": "^cf_[0-9A-Za-z_]+",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "title": "name",
                    "x-nullable": true
                },
                "numeric_enum_values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UpdateCustomFieldsBodyNumeric_enum_values"
                    },
                    "x-nullable": true
                },
                "string_enum_values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UpdateCustomFieldsBodyString_enum_values"
                    },
                    "x-nullable": true
                }
            }
        },
        "UpdateCustomFieldsBodyNumeric_enum_values": {
            "type": "object",
            "required": [
                "label",
                "numeric_value"
            ],
            "properties": {
                "delete": {
                    "type": "boolean",
                    "title": "delete",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "id",
                    "x-nullable": true
                },
                "is_default": {
                    "type": "boolean",
                    "title": "is_default",
                    "x-nullable": true
                },
                "label": {
                    "type": "string",
                    "title": "label",
                    "maxLength": 32,
                    "x-nullable": false
                },
                "numeric_value": {
                    "type": "number",
                    "format": "double",
                    "title": "numeric_value",
                    "x-nullable": false
                }
            }
        },
        "UpdateCustomFieldsBodyString_enum_values": {
            "type": "object",
            "required": [
                "label"
            ],
            "properties": {
                "delete": {
                    "type": "boolean",
                    "title": "delete",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "id",
                    "x-nullable": true
                },
                "is_default": {
                    "type": "boolean",
                    "title": "is_default",
                    "x-nullable": true
                },
                "label": {
                    "type": "string",
                    "title": "label",
                    "maxLength": 32,
                    "x-nullable": false
                }
            }
        },
        "UpdateFeaturesBody": {
            "type": "object",
            "properties": {
                "attachment_tokens": {
                    "type": "array",
                    "title": "attachment_tokens",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "description": {
                    "type": "string",
                    "title": "description",
                    "x-nullable": true
                },
                "feature_status_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "feature_status_id",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "title": "name",
                    "x-nullable": true
                },
                "position": {
                    "type": "integer",
                    "format": "int64",
                    "title": "position",
                    "x-nullable": true
                },
                "product_area_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "product_area_id",
                    "x-nullable": true
                },
                "roadmap_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "roadmap_id",
                    "x-nullable": true
                }
            },
            "additionalProperties": true
        },
        "UpdateFeedbackRecordsBody": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "\nThe text in the body of the feedback record\n",
                    "type": "string",
                    "title": "body",
                    "x-nullable": true,
                    "example": "Our organization blocks gravatars so it would be very useful if we could upload our own avatar images directly."
                },
                "body_mime_type": {
                    "type": "string",
                    "title": "body_mime_type",
                    "enum": [
                        "text/html",
                        "text/plain"
                    ],
                    "x-nullable": true
                },
                "links": {
                    "x-nullable": true,
                    "$ref": "#/definitions/UpdateFeedbackRecordsBodyLinks"
                },
                "opportunity": {
                    "x-nullable": true,
                    "$ref": "#/definitions/UpdateFeedbackRecordsBodyOpportunity"
                },
                "product_area_id": {
                    "type": "integer",
                    "format": "int64",
                    "title": "product_area_id",
                    "x-nullable": true
                },
                "severity": {
                    "type": "integer",
                    "format": "int64",
                    "title": "severity",
                    "x-nullable": true
                },
                "source_guid": {
                    "type": "string",
                    "title": "source_guid",
                    "x-nullable": true
                },
                "source_type": {
                    "type": "string",
                    "title": "source_type",
                    "x-nullable": true
                },
                "source_url": {
                    "type": "string",
                    "title": "source_url",
                    "x-nullable": true
                },
                "subscribe": {
                    "type": "boolean",
                    "title": "subscribe",
                    "x-nullable": true
                }
            }
        },
        "UpdateFeedbackRecordsBodyLinks": {
            "type": "object",
            "properties": {
                "user": {
                    "description": "\nThe ID of the user that submitted the feedback\n",
                    "type": "integer",
                    "format": "int64",
                    "title": "user",
                    "x-nullable": true
                }
            }
        },
        "UpdateFeedbackRecordsBodyOpportunity": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "\nThe dollar value of the opportunity\n",
                    "type": "number",
                    "format": "double",
                    "title": "amount",
                    "x-nullable": true,
                    "example": 42170.99
                },
                "external_id": {
                    "type": "string",
                    "title": "external_id",
                    "x-nullable": true
                },
                "external_url": {
                    "type": "string",
                    "title": "external_url",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "title": "name",
                    "x-nullable": true
                },
                "stage_type": {
                    "type": "string",
                    "title": "stage_type",
                    "x-nullable": true
                }
            }
        },
        "UpdateInternalStatusUpdatesBody": {
            "type": "object",
            "properties": {
                "html_text": {
                    "description": "text or html_text is required",
                    "type": "string",
                    "title": "html_text",
                    "x-nullable": true
                },
                "text": {
                    "description": "text will be ignored if html_text is present",
                    "type": "string",
                    "title": "text",
                    "x-nullable": true
                }
            }
        },
        "UpdateLabelsBody": {
            "type": "object",
            "properties": {
                "links": {
                    "x-nullable": true,
                    "$ref": "#/definitions/UpdateLabelsBodyLinks"
                },
                "name": {
                    "type": "string",
                    "title": "name",
                    "x-nullable": true
                }
            }
        },
        "UpdateLabelsBodyLinks": {
            "type": "object",
            "properties": {
                "parent": {
                    "type": "integer",
                    "format": "int64",
                    "title": "parent",
                    "x-nullable": true
                }
            }
        },
        "UpdateNotesBody": {
            "type": "object",
            "required": [
                "body"
            ],
            "properties": {
                "attachment_tokens": {
                    "type": "array",
                    "title": "attachment_tokens",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "body": {
                    "type": "string",
                    "title": "body",
                    "x-nullable": false
                }
            }
        },
        "UpdatePermissionsBody": {
            "type": "object",
            "required": [
                "license_type"
            ],
            "properties": {
                "features": {
                    "type": "string",
                    "title": "features",
                    "default": "none",
                    "enum": [
                        "none",
                        "view",
                        "manage"
                    ],
                    "x-nullable": true
                },
                "feedback": {
                    "type": "string",
                    "title": "feedback",
                    "default": "contribute",
                    "enum": [
                        "none",
                        "view",
                        "contribute",
                        "manage"
                    ],
                    "x-nullable": true
                },
                "knowledgebase": {
                    "type": "string",
                    "title": "knowledgebase",
                    "default": "none",
                    "enum": [
                        "none",
                        "view",
                        "manage"
                    ],
                    "x-nullable": true
                },
                "license_type": {
                    "type": "string",
                    "title": "license_type",
                    "enum": [
                        "fullaccess_admin",
                        "admin",
                        "contributor",
                        "helpdesk_admin"
                    ],
                    "x-nullable": false
                },
                "settings": {
                    "type": "string",
                    "title": "settings",
                    "default": "none",
                    "enum": [
                        "none",
                        "manage",
                        "manage_account"
                    ],
                    "x-nullable": true
                },
                "tickets": {
                    "type": "string",
                    "title": "tickets",
                    "default": "none",
                    "enum": [
                        "none",
                        "view",
                        "manage"
                    ],
                    "x-nullable": true
                }
            }
        },
        "UpdateStatusUpdatesBody": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "body will be ignored if html_body is present",
                    "type": "string",
                    "title": "body",
                    "x-nullable": true
                },
                "html_body": {
                    "description": "body or html_body is required",
                    "type": "string",
                    "title": "html_body",
                    "x-nullable": true
                }
            }
        },
        "UpdateSubdomainsBody": {
            "type": "object",
            "properties": {
                "require_suggestion_on_capture_feedback": {
                    "type": "string",
                    "title": "require_suggestion_on_capture_feedback",
                    "enum": [
                        "required",
                        "optional",
                        "link_only",
                        "disallow"
                    ],
                    "x-nullable": true
                },
                "severity_tracking_enabled": {
                    "type": "boolean",
                    "title": "severity_tracking_enabled",
                    "x-nullable": true
                }
            }
        },
        "UpdateSuggestionsBody": {
            "type": "object",
            "properties": {
                "attachment_tokens": {
                    "description": "\nUpload the attachment using the Attachments endpoint first, then use the token found in the response to attach it here.",
                    "type": "array",
                    "title": "attachment_tokens",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "body": {
                    "type": "string",
                    "title": "body",
                    "maxLength": 10000,
                    "x-nullable": true
                },
                "body_mime_type": {
                    "type": "string",
                    "title": "body_mime_type",
                    "enum": [
                        "text/plain"
                    ],
                    "x-nullable": true
                },
                "links": {
                    "x-nullable": true,
                    "$ref": "#/definitions/UpdateSuggestionsBodyLinks"
                },
                "title": {
                    "type": "string",
                    "title": "title",
                    "maxLength": 140,
                    "x-nullable": true
                }
            },
            "additionalProperties": true
        },
        "UpdateSuggestionsBodyLinks": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "integer",
                    "format": "int64",
                    "title": "category",
                    "x-nullable": true
                },
                "forum": {
                    "type": "integer",
                    "format": "int64",
                    "title": "forum",
                    "x-nullable": true
                }
            }
        },
        "UpdateTeamsBody": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "title": "name",
                    "x-nullable": true
                }
            }
        },
        "UpdateTranslatableStringsBody": {
            "type": "object",
            "required": [
                "locale"
            ],
            "properties": {
                "locale": {
                    "type": "string",
                    "title": "locale",
                    "x-nullable": false
                }
            },
            "additionalProperties": true
        },
        "UpdateViewsBody": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "title": "name",
                    "x-nullable": true
                },
                "params": {
                    "type": "string",
                    "title": "params",
                    "x-nullable": true
                },
                "position": {
                    "type": "integer",
                    "format": "int64",
                    "title": "position",
                    "x-nullable": true
                },
                "subscribed": {
                    "type": "boolean",
                    "title": "subscribed",
                    "x-nullable": true
                },
                "subscription_params": {
                    "type": "string",
                    "title": "subscription_params",
                    "x-nullable": true
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "allowed_state": {
                    "type": "string",
                    "x-nullable": true
                },
                "avatar_url": {
                    "type": "string",
                    "x-nullable": true
                },
                "city": {
                    "type": "string",
                    "x-nullable": true
                },
                "comment_notifications": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "country": {
                    "type": "string",
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "email_address": {
                    "type": "string",
                    "x-nullable": true
                },
                "email_confirmed": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "guid": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "importance_score": {
                    "type": "string"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "is_owner": {
                    "type": "boolean"
                },
                "is_subscribed": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "is_validation_admin": {
                    "type": "boolean"
                },
                "job_title": {
                    "type": "string",
                    "x-nullable": true
                },
                "last_ip": {
                    "type": "string",
                    "x-nullable": true
                },
                "last_login": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "current_nps_rating": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "external_users": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "x-nullable": true
                        },
                        "previous_nps_rating": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "supporter": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "teams": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "x-nullable": true
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "permissions": {
                    "x-nullable": true,
                    "$ref": "#/definitions/AdminPermission"
                },
                "region": {
                    "type": "string",
                    "x-nullable": true
                },
                "satisfaction_score": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "state": {
                    "type": "string",
                    "x-nullable": true
                },
                "status_notifications": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "suggestion_votes": {
                    "type": "integer",
                    "format": "int64"
                },
                "support_created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "supported_suggestions_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "traits": {
                    "x-nullable": true,
                    "$ref": "#/definitions/UserTraits"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "UserRef": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "UserTraits": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ExternalProperties"
                },
                {
                    "$ref": "#/definitions/ExternalTraits"
                }
            ]
        },
        "ValidationErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "x-go-interface": true
                    },
                    "x-nullable": true
                }
            }
        },
        "View": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "kind": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "created_by": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "suggestion": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        },
                        "user": {
                            "type": "integer",
                            "format": "int64",
                            "x-nullable": true
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "object_id": {
                    "type": "integer",
                    "format": "int64",
                    "x-nullable": true
                },
                "owner_email": {
                    "type": "string"
                },
                "params": {
                    "type": "string"
                },
                "position": {
                    "type": "integer",
                    "format": "int64"
                },
                "state": {
                    "type": "string"
                },
                "sub_kind": {
                    "type": "string"
                },
                "subscribed": {
                    "type": "boolean"
                },
                "subscription_params": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "VstsWorkItem": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "icon_url": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "identifier": {
                    "type": "string",
                    "x-nullable": true
                },
                "last_known_state": {
                    "type": "string",
                    "x-nullable": true
                },
                "state_last_updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "title": {
                    "type": "string",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "url": {
                    "type": "string",
                    "x-nullable": true
                },
                "work_item_type": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        }
    },
    "securityDefinitions": {
        "oauth2_client_credentials": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://\u003csubdomain\u003e.uservoice.com/api/v2/oauth/token",
            "scopes": {
                "admin": "full admin access"
            }
        }
    },
    "security": [
        {
            "oauth2_client_credentials": [
                "admin"
            ]
        }
    ],
    "tags": [
        {
            "description": "See [the getting started guide](https://developer.uservoice.com/docs/api/v2/getting-started/) for details on authentication.\n\n",
            "name": "oauth"
        },
        {
            "description": "Known in the Admin Console as Azure Dev Ops. You must have configured the Integration for this endpoint to function. A DevOps work item is a mapping between a work item in Azure DevOps (formerly VSTS) and a UserVoice object (either a feature or suggestion). Learn more about this integration [here](https://help.uservoice.com/hc/en-us/articles/360034994894).",
            "name": "vsts_work_items"
        },
        {
            "description": "[Permissions](https://help.uservoice.com/hc/en-us/articles/360035484653) represent an administrator user's permission level.\n\n",
            "name": "permissions"
        },
        {
            "description": "User objects provide details on anyone who has interacted with you through UserVoice. This includes admins as well as end users.\n\n",
            "name": "users"
        },
        {
            "description": "\n\t\tActivity entries provide a list of events affecting core objects in the system.\n\t",
            "name": "activity_entries"
        },
        {
            "description": "Attachment objects represent files that you upload to the UserVoice system. Once you have created an attachment, you will need to link it to a suggestion or note object. This can be accomplished in one of two ways:\n* → During creation of a suggestion or note, provide one or more attachment tokens\n* → Edit an existing suggestion, and assign one or more attachment tokens\n\nMore information about suggestion attachments can be found [here](https://help.uservoice.com/hc/en-us/articles/360035473213).\n\n",
            "name": "attachments"
        },
        {
            "description": "\n\t\tInvalid Attachment objects provide metadata on attempted attachments that were rejected.\n\t\tFor instance, a user may email us a file attachment of an unsupported type. We chose not\n\t\tto store the file, but keep some metadata for informational purposes.\n\t",
            "name": "invalid_attachments"
        },
        {
            "description": "A [view](https://help.uservoice.com/hc/en-us/articles/360034988374) is a saved definition of filters on a particular object type. This provides a convenient way to navigate to a frequently-used view of resources in the admin console. It also provides a way for admins to subscribe to data changes that meet specific criteria.\n\n",
            "name": "views"
        },
        {
            "description": "Known in the Admin Console as Ideas. Suggestions represent a requested change to your product. They may be authored by one of your customers, your product staff, or other staff from your company. Each suggestion is linked to a forum, where it can be visible publicly or to authorized users.\n\n",
            "name": "suggestions"
        },
        {
            "description": "The external account object contains traits about an account from your external system(s). The account is linked to one or more users, to allow segmentation of user feedback by supporters' account traits. More information about traits can be found [here](https://help.uservoice.com/hc/en-us/articles/360034996114).\n\n",
            "name": "external_accounts"
        },
        {
            "description": "The external user object stores user traits from your external system(s). This allows segmentation of user feedback based on user traits that are of interest to your business. More information about traits can be found [here](https://help.uservoice.com/hc/en-us/articles/360034996114).\n\n",
            "name": "external_users"
        },
        {
            "description": "The status update records the event when an admin changed a suggestion's status. If the admin chose to write a message to subscriber's regarding the status change, the message text is stored in the status update's `body` field. More information about statuses and notifying users can be found [here](https://help.uservoice.com/hc/en-us/articles/360034984834).\n\n",
            "name": "status_updates"
        },
        {
            "description": "The internal status update records the event when an admin changed a suggestion's internal status. If the admin chose to write a message regarding the status change, the message text is stored in the internal status update's `text` field. More information about statuses and notifying users can be found [here](https://help.uservoice.com/hc/en-us/articles/360035475433).\n\n",
            "name": "internal_status_updates"
        },
        {
            "description": "A status can be assigned to a suggestion to indicate its current public state. By default, there are five statuses available: \"Under Review\", \"Planned\", \"Started\", \"Completed\" and \"Declined\".\n\n",
            "name": "statuses"
        },
        {
            "description": "An internal status can be assigned to a suggestion to indicate its current state for internal teams. By default, there are six statuses available: \"No Status\", \"Not a Priority\", \"Need More Specifics\", \"Under Consideration\", \"In Progress\", and \"Completed\".\n\n",
            "name": "internal_statuses"
        },
        {
            "description": "Categories allow you to organize suggestions in a forum. They differ from labels in the following ways:\n* → Each category belongs to one forum.\n* → Each suggestion can have only one category.\n* → Categories are visible to end users.\n\n",
            "name": "categories"
        },
        {
            "description": "Comments allow forum users to discuss suggestions with your team.\n\n",
            "name": "comments"
        },
        {
            "description": "Known in the Admin Console as Voters. A supporter is a link object connecting a user to a suggestion. The existence of the supporter indicates that the user supports the suggestion, and possibly subscribes to it.\n\n",
            "name": "supporters"
        },
        {
            "description": "A supporter message is a communication sent from an admin to supporters of a particular suggestion.\n\n",
            "name": "supporter_messages"
        },
        {
            "description": "Known in the Admin Console as Internal Comments. Notes provide a way for admins to communicate internally about suggestions.\n\n",
            "name": "notes"
        },
        {
            "description": "Suggestion activity entries provide a log of events affecting suggestions.\n\n",
            "name": "suggestion_activity_entries"
        },
        {
            "description": "A forum object represents a discussion forum where users can create, support, and comment on suggestions. A forum can be accessible to the public, or restricted to specific networks or users.\n\n",
            "name": "forums"
        },
        {
            "description": "A forum invitation object is created to grant access to a new forum user. It stores the state of the invitation workflow, which includes confirming the user's email address, and ensuring a form of authentication.\n\n",
            "name": "forum_invitations"
        },
        {
            "description": "A feedback record represents an individual piece of feedback submitted by or captured on behalf of an end user. If it is associated with a suggestion then the user will be counted as a supporter of that suggestion.\n\nA feedback record differs from a suggestion in the following ways:\n* → It is associated with only one user, and represents their voice and their scenario.\n* → Its content is not visible to any end users.\n* → It can be captured by your company's staff (\"contributors\") on behalf of an end user.\n\n",
            "name": "feedback_records"
        },
        {
            "description": "[Labels](https://help.uservoice.com/hc/en-us/articles/360034988534) allow admins to organize suggestions internally. They differ from categories in the following ways:\n* → They are not associated with a particular forum.\n* → They are not visible to end users.\n* → Each suggestion can be assigned multiple labels.\n\n",
            "name": "labels"
        },
        {
            "description": "The NPS, or \"Net Promoter Score\" algorithm is used to measure customer satisfaction on a simple scale. It is calculated based\non individual NPS ratings. These are responses from users to one question: How likely is it that you would recommend [our\nproduct/service] to a friend or colleague?\n\nThe NPS rating object stores the answer as a number on a 0 to 10 scale, plus a free-form text response that the user may provide.\n\n",
            "name": "nps_ratings"
        },
        {
            "description": "A subdomain refers to the UserVoice instance you are connected to. For example, if your instance URL is `https://acme.uservoice.com`, your subdomain is `acme`. You can find more information regarding changes to your subdomain [here](https://help.uservoice.com/hc/en-us/articles/360035070054).\n\n",
            "name": "subdomains"
        },
        {
            "description": "Teams can be assigned to UserVoice admins and contributors to organize the feedback they capture by department, such as Sales or Support.\n\n",
            "name": "teams"
        },
        {
            "description": "Custom fields allow you to customize the data you store for each `external_user` or `external_account`. Once a custom field is created, you can assign values for this field, and use those to segment feedback based on the supporter characteristics that are relevant to your business.\n\n",
            "name": "custom_fields"
        },
        {
            "description": "Features allow you to aggregate feedback around planned product features.\n\n",
            "name": "features"
        },
        {
            "description": "A segment is a subset of your users and accounts defined by a set of filter criteria. It can be used in conjunction with segmented values to aggregate supporter metrics by subsets of your users.\n\n",
            "name": "segments"
        },
        {
            "description": "A segmented value is a calculated column that aggregates supporter metrics for a segment.\n\n",
            "name": "segmented_values"
        },
        {
            "description": "A score is a calculated column that combines other numerical attributes into an overall feature ranking.\n\n",
            "name": "scores"
        },
        {
            "description": "A feature status can be assigned to a feature to indicate its current state. By default, there are six feature statuses: \"Proposed\", \"Designing\", \"Developing\", \"Researching\", \"Beta\", and \"Complete\".\n\nThe existing feature statuses can be modified or deleted, and new feature statuses created to fit your needs.\n\n",
            "name": "feature_statuses"
        },
        {
            "description": "Product areas can be assigned to features to organize them into logical groups.\n\n",
            "name": "product_areas"
        },
        {
            "description": "[BETA] SFDC Opportunities lets you store information about salesforce opportunities.",
            "name": "sfdc_opportunities"
        },
        {
            "description": "Translatable strings are localized strings for much of the public-facing content your users may see on the UserVoice portal, such as the site welcome message and forum names.\n\n",
            "name": "translatable_strings"
        },
        {
            "description": "\n\t\tGsCompanies contain additional account details pulled from Gainsight.\n\t",
            "name": "gs_companies"
        },
        {
            "description": "\n\t\tFullStory sessions related to a linked activity in UV.\n\t",
            "name": "fullstory_user_sessions"
        },
        {
            "description": "Flag ideas for admin attention.",
            "name": "internal_flags"
        },
        {
            "description": "Email templates that are automatically sent when users submit new ideas.",
            "name": "autoreply_emails"
        },
        {
            "description": "Automatically generated possible merges.",
            "name": "suggested_merges"
        },
        {
            "description": "tbd",
            "name": "outreaches"
        },
        {
            "description": "Labels for importance responses",
            "name": "importance_responses"
        }
    ],
    "x-tagGroups": [
        {
            "name": "Core Objects",
            "tags": [
                "external_accounts",
                "external_users",
                "features",
                "feedback_records",
                "nps_ratings",
                "suggestions"
            ]
        },
        {
            "name": "Other",
            "tags": [
                "activity_entries",
                "attachments",
                "autoreply_emails",
                "categories",
                "comments",
                "custom_fields",
                "feature_statuses",
                "forum_invitations",
                "forums",
                "fullstory_user_sessions",
                "gs_companies",
                "importance_responses",
                "internal_flags",
                "internal_status_updates",
                "internal_statuses",
                "invalid_attachments",
                "labels",
                "notes",
                "oauth",
                "outreaches",
                "permissions",
                "product_areas",
                "scores",
                "segmented_values",
                "segments",
                "sfdc_opportunities",
                "status_updates",
                "statuses",
                "subdomains",
                "suggested_merges",
                "suggestion_activity_entries",
                "supporter_messages",
                "supporters",
                "teams",
                "translatable_strings",
                "users",
                "views",
                "vsts_work_items"
            ]
        }
    ]
}
